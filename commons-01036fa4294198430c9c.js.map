{"version":3,"file":"commons-01036fa4294198430c9c.js","mappings":"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","sources":["webpack://lotus/./src/components/header/index.tsx","webpack://lotus/./src/components/footer/index.tsx","webpack://lotus/./src/components/layout/index.tsx","webpack://lotus/./node_modules/@iconify/react/dist/iconify.mjs"],"sourcesContent":["import { Link } from 'gatsby';\r\nimport { FC, useEffect } from 'react';\r\nimport { Icon } from '@iconify/react';\r\nimport { useColorMode } from 'theme-ui';\r\n\r\nimport './header.scss';\r\n\r\ninterface props {\r\n  links: { name: string; path: string; icon?: `${string}:${string}` }[];\r\n  siteTitle: string;\r\n}\r\n\r\nconst Header: FC<props> = ({ links, siteTitle }) => {\r\n  const [colorTheme, setColorTheme] = useColorMode();\r\n  const nextColorMode = colorTheme === `light` ? `dark` : `light`;\r\n\r\n  useEffect(() => {\r\n    if (typeof document !== `undefined`) {\r\n      document.body.classList.remove(nextColorMode);\r\n      document.body.classList.add(colorTheme);\r\n    }\r\n  }, [colorTheme, nextColorMode]);\r\n\r\n  const toggle = () => {\r\n    setColorTheme(nextColorMode);\r\n  };\r\n\r\n  return (\r\n    <div id=\"header\">\r\n      <header>\r\n        <Link to=\"/\" className=\"title\">\r\n          {siteTitle}\r\n        </Link>\r\n        <nav>\r\n          <ul>\r\n            {links.map((l, i) => (\r\n              <li key={i}>\r\n                <Link className=\"nav-link\" to={l.path}>\r\n                  {l.icon && <Icon width={20} icon={l.icon} />}\r\n                  {l.name}\r\n                </Link>\r\n              </li>\r\n            ))}\r\n            <li className=\"color-toggle\" onClick={toggle}>\r\n              {colorTheme === `dark` ? (\r\n                <Icon width={20} icon=\"fa-solid:moon\" />\r\n              ) : colorTheme === `light` ? (\r\n                <Icon width={20} icon=\"fa-solid:sun\" />\r\n              ) : (\r\n                <Icon width={20} icon=\"fa-solid:adjust\" />\r\n              )}\r\n            </li>\r\n            <li>\r\n              <Link className=\"nav-link\" to=\"/search\">\r\n                <Icon width={20} icon=\"fa6-solid:magnifying-glass\" />\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { FC } from 'react';\r\n\r\nimport './footer.scss';\r\n\r\nconst Footer: FC<{ nickname: string; github?: string }> = ({\r\n  nickname,\r\n  github,\r\n}) => {\r\n  return (\r\n    <div id=\"footer\">\r\n      <div>\r\n        © 2022&nbsp;\r\n        {github ? (\r\n          <a\r\n            target=\"_blank\"\r\n            href={`https://github.com/${github}`}\r\n            rel=\"noreferrer\"\r\n          >\r\n            {nickname}\r\n          </a>\r\n        ) : (\r\n          <span>{nickname}</span>\r\n        )}\r\n        &nbsp;powered by&nbsp;\r\n        <a\r\n          target=\"_blank\"\r\n          href=\"https://github.com/ywbird/lotus\"\r\n          rel=\"noreferrer\"\r\n        >\r\n          Lotus\r\n        </a>\r\n        . All Rights Reserved.\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { graphql, useStaticQuery } from 'gatsby';\r\nimport { FC, ReactNode } from 'react';\r\n\r\nimport Header from '@/components/header';\r\nimport './layout.scss';\r\nimport Footer from '../footer';\r\n\r\ninterface props {\r\n  pageTitle: string;\r\n  children: ReactNode;\r\n  w?: 'wide' | 'narrow';\r\n}\r\n\r\nconst Layout: FC<props> = ({ pageTitle, w, children }) => {\r\n  const data: {\r\n    site: {\r\n      siteMetadata: {\r\n        title: string;\r\n        nickname: string;\r\n        github?: string;\r\n        nav: {\r\n          name: string;\r\n          path: string;\r\n          icon?: `${string}:${string}`;\r\n        }[];\r\n      };\r\n    };\r\n  } = useStaticQuery(graphql`\r\n    {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n          nickname\r\n          github\r\n          nav {\r\n            name\r\n            path\r\n            icon\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  const {\r\n    site: {\r\n      siteMetadata: { nav, title, nickname, github },\r\n    },\r\n  } = data;\r\n\r\n  return (\r\n    <div>\r\n      <Header links={nav} siteTitle={title} />\r\n      <main className={`container ${w}`}>\r\n        <h1 className=\"heading\">{pageTitle}</h1>\r\n        {children}\r\n      </main>\r\n      <Footer nickname={nickname} github={github} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from 'react';\n\nconst matchIconName = /^[a-z0-9]+(-[a-z0-9]+)*$/;\nconst stringToIcon = (value, validate, allowSimpleName, provider = \"\") => {\n  const colonSeparated = value.split(\":\");\n  if (value.slice(0, 1) === \"@\") {\n    if (colonSeparated.length < 2 || colonSeparated.length > 3) {\n      return null;\n    }\n    provider = colonSeparated.shift().slice(1);\n  }\n  if (colonSeparated.length > 3 || !colonSeparated.length) {\n    return null;\n  }\n  if (colonSeparated.length > 1) {\n    const name2 = colonSeparated.pop();\n    const prefix = colonSeparated.pop();\n    const result = {\n      provider: colonSeparated.length > 0 ? colonSeparated[0] : provider,\n      prefix,\n      name: name2\n    };\n    return validate && !validateIconName(result) ? null : result;\n  }\n  const name = colonSeparated[0];\n  const dashSeparated = name.split(\"-\");\n  if (dashSeparated.length > 1) {\n    const result = {\n      provider,\n      prefix: dashSeparated.shift(),\n      name: dashSeparated.join(\"-\")\n    };\n    return validate && !validateIconName(result) ? null : result;\n  }\n  if (allowSimpleName && provider === \"\") {\n    const result = {\n      provider,\n      prefix: \"\",\n      name\n    };\n    return validate && !validateIconName(result, allowSimpleName) ? null : result;\n  }\n  return null;\n};\nconst validateIconName = (icon, allowSimpleName) => {\n  if (!icon) {\n    return false;\n  }\n  return !!((icon.provider === \"\" || icon.provider.match(matchIconName)) && (allowSimpleName && icon.prefix === \"\" || icon.prefix.match(matchIconName)) && icon.name.match(matchIconName));\n};\n\nconst defaultIconDimensions = Object.freeze(\n  {\n    left: 0,\n    top: 0,\n    width: 16,\n    height: 16\n  }\n);\nconst defaultIconTransformations = Object.freeze({\n  rotate: 0,\n  vFlip: false,\n  hFlip: false\n});\nconst defaultIconProps = Object.freeze({\n  ...defaultIconDimensions,\n  ...defaultIconTransformations\n});\nconst defaultExtendedIconProps = Object.freeze({\n  ...defaultIconProps,\n  body: \"\",\n  hidden: false\n});\n\nfunction mergeIconTransformations(obj1, obj2) {\n  const result = {};\n  if (!obj1.hFlip !== !obj2.hFlip) {\n    result.hFlip = true;\n  }\n  if (!obj1.vFlip !== !obj2.vFlip) {\n    result.vFlip = true;\n  }\n  const rotate = ((obj1.rotate || 0) + (obj2.rotate || 0)) % 4;\n  if (rotate) {\n    result.rotate = rotate;\n  }\n  return result;\n}\n\nfunction mergeIconData(parent, child) {\n  const result = mergeIconTransformations(parent, child);\n  for (const key in defaultExtendedIconProps) {\n    if (key in defaultIconTransformations) {\n      if (key in parent && !(key in result)) {\n        result[key] = defaultIconTransformations[key];\n      }\n    } else if (key in child) {\n      result[key] = child[key];\n    } else if (key in parent) {\n      result[key] = parent[key];\n    }\n  }\n  return result;\n}\n\nfunction getIconsTree(data, names) {\n  const icons = data.icons;\n  const aliases = data.aliases || {};\n  const resolved = /* @__PURE__ */ Object.create(null);\n  function resolve(name) {\n    if (icons[name]) {\n      return resolved[name] = [];\n    }\n    if (!(name in resolved)) {\n      resolved[name] = null;\n      const parent = aliases[name] && aliases[name].parent;\n      const value = parent && resolve(parent);\n      if (value) {\n        resolved[name] = [parent].concat(value);\n      }\n    }\n    return resolved[name];\n  }\n  (names || Object.keys(icons).concat(Object.keys(aliases))).forEach(resolve);\n  return resolved;\n}\n\nfunction internalGetIconData(data, name, tree) {\n  const icons = data.icons;\n  const aliases = data.aliases || {};\n  let currentProps = {};\n  function parse(name2) {\n    currentProps = mergeIconData(\n      icons[name2] || aliases[name2],\n      currentProps\n    );\n  }\n  parse(name);\n  tree.forEach(parse);\n  return mergeIconData(data, currentProps);\n}\n\nfunction parseIconSet(data, callback) {\n  const names = [];\n  if (typeof data !== \"object\" || typeof data.icons !== \"object\") {\n    return names;\n  }\n  if (data.not_found instanceof Array) {\n    data.not_found.forEach((name) => {\n      callback(name, null);\n      names.push(name);\n    });\n  }\n  const tree = getIconsTree(data);\n  for (const name in tree) {\n    const item = tree[name];\n    if (item) {\n      callback(name, internalGetIconData(data, name, item));\n      names.push(name);\n    }\n  }\n  return names;\n}\n\nconst optionalPropertyDefaults = {\n  provider: \"\",\n  aliases: {},\n  not_found: {},\n  ...defaultIconDimensions\n};\nfunction checkOptionalProps(item, defaults) {\n  for (const prop in defaults) {\n    if (prop in item && typeof item[prop] !== typeof defaults[prop]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction quicklyValidateIconSet(obj) {\n  if (typeof obj !== \"object\" || obj === null) {\n    return null;\n  }\n  const data = obj;\n  if (typeof data.prefix !== \"string\" || !obj.icons || typeof obj.icons !== \"object\") {\n    return null;\n  }\n  if (!checkOptionalProps(obj, optionalPropertyDefaults)) {\n    return null;\n  }\n  const icons = data.icons;\n  for (const name in icons) {\n    const icon = icons[name];\n    if (!name.match(matchIconName) || typeof icon.body !== \"string\" || !checkOptionalProps(\n      icon,\n      defaultExtendedIconProps\n    )) {\n      return null;\n    }\n  }\n  const aliases = data.aliases || {};\n  for (const name in aliases) {\n    const icon = aliases[name];\n    const parent = icon.parent;\n    if (!name.match(matchIconName) || typeof parent !== \"string\" || !icons[parent] && !aliases[parent] || !checkOptionalProps(\n      icon,\n      defaultExtendedIconProps\n    )) {\n      return null;\n    }\n  }\n  return data;\n}\n\nconst dataStorage = /* @__PURE__ */ Object.create(null);\nfunction newStorage(provider, prefix) {\n  return {\n    provider,\n    prefix,\n    icons: /* @__PURE__ */ Object.create(null),\n    missing: /* @__PURE__ */ new Set()\n  };\n}\nfunction getStorage(provider, prefix) {\n  const providerStorage = dataStorage[provider] || (dataStorage[provider] = /* @__PURE__ */ Object.create(null));\n  return providerStorage[prefix] || (providerStorage[prefix] = newStorage(provider, prefix));\n}\nfunction addIconSet(storage, data) {\n  if (!quicklyValidateIconSet(data)) {\n    return [];\n  }\n  return parseIconSet(data, (name, icon) => {\n    if (icon) {\n      storage.icons[name] = icon;\n    } else {\n      storage.missing.add(name);\n    }\n  });\n}\nfunction addIconToStorage(storage, name, icon) {\n  try {\n    if (typeof icon.body === \"string\") {\n      storage.icons[name] = { ...icon };\n      return true;\n    }\n  } catch (err) {\n  }\n  return false;\n}\nfunction listIcons(provider, prefix) {\n  let allIcons = [];\n  const providers = typeof provider === \"string\" ? [provider] : Object.keys(dataStorage);\n  providers.forEach((provider2) => {\n    const prefixes = typeof provider2 === \"string\" && typeof prefix === \"string\" ? [prefix] : Object.keys(dataStorage[provider2] || {});\n    prefixes.forEach((prefix2) => {\n      const storage = getStorage(provider2, prefix2);\n      allIcons = allIcons.concat(\n        Object.keys(storage.icons).map(\n          (name) => (provider2 !== \"\" ? \"@\" + provider2 + \":\" : \"\") + prefix2 + \":\" + name\n        )\n      );\n    });\n  });\n  return allIcons;\n}\n\nlet simpleNames = false;\nfunction allowSimpleNames(allow) {\n  if (typeof allow === \"boolean\") {\n    simpleNames = allow;\n  }\n  return simpleNames;\n}\nfunction getIconData(name) {\n  const icon = typeof name === \"string\" ? stringToIcon(name, true, simpleNames) : name;\n  if (icon) {\n    const storage = getStorage(icon.provider, icon.prefix);\n    const iconName = icon.name;\n    return storage.icons[iconName] || (storage.missing.has(iconName) ? null : void 0);\n  }\n}\nfunction addIcon(name, data) {\n  const icon = stringToIcon(name, true, simpleNames);\n  if (!icon) {\n    return false;\n  }\n  const storage = getStorage(icon.provider, icon.prefix);\n  return addIconToStorage(storage, icon.name, data);\n}\nfunction addCollection(data, provider) {\n  if (typeof data !== \"object\") {\n    return false;\n  }\n  if (typeof provider !== \"string\") {\n    provider = data.provider || \"\";\n  }\n  if (simpleNames && !provider && !data.prefix) {\n    let added = false;\n    if (quicklyValidateIconSet(data)) {\n      data.prefix = \"\";\n      parseIconSet(data, (name, icon) => {\n        if (icon && addIcon(name, icon)) {\n          added = true;\n        }\n      });\n    }\n    return added;\n  }\n  const prefix = data.prefix;\n  if (!validateIconName({\n    provider,\n    prefix,\n    name: \"a\"\n  })) {\n    return false;\n  }\n  const storage = getStorage(provider, prefix);\n  return !!addIconSet(storage, data);\n}\nfunction iconExists(name) {\n  return !!getIconData(name);\n}\nfunction getIcon(name) {\n  const result = getIconData(name);\n  return result ? {\n    ...defaultIconProps,\n    ...result\n  } : null;\n}\n\nconst defaultIconSizeCustomisations = Object.freeze({\n  width: null,\n  height: null\n});\nconst defaultIconCustomisations = Object.freeze({\n  ...defaultIconSizeCustomisations,\n  ...defaultIconTransformations\n});\n\nconst unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nconst unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\nfunction calculateSize(size, ratio, precision) {\n  if (ratio === 1) {\n    return size;\n  }\n  precision = precision || 100;\n  if (typeof size === \"number\") {\n    return Math.ceil(size * ratio * precision) / precision;\n  }\n  if (typeof size !== \"string\") {\n    return size;\n  }\n  const oldParts = size.split(unitsSplit);\n  if (oldParts === null || !oldParts.length) {\n    return size;\n  }\n  const newParts = [];\n  let code = oldParts.shift();\n  let isNumber = unitsTest.test(code);\n  while (true) {\n    if (isNumber) {\n      const num = parseFloat(code);\n      if (isNaN(num)) {\n        newParts.push(code);\n      } else {\n        newParts.push(Math.ceil(num * ratio * precision) / precision);\n      }\n    } else {\n      newParts.push(code);\n    }\n    code = oldParts.shift();\n    if (code === void 0) {\n      return newParts.join(\"\");\n    }\n    isNumber = !isNumber;\n  }\n}\n\nfunction iconToSVG(icon, customisations) {\n  const fullIcon = {\n    ...defaultIconProps,\n    ...icon\n  };\n  const fullCustomisations = {\n    ...defaultIconCustomisations,\n    ...customisations\n  };\n  const box = {\n    left: fullIcon.left,\n    top: fullIcon.top,\n    width: fullIcon.width,\n    height: fullIcon.height\n  };\n  let body = fullIcon.body;\n  [fullIcon, fullCustomisations].forEach((props) => {\n    const transformations = [];\n    const hFlip = props.hFlip;\n    const vFlip = props.vFlip;\n    let rotation = props.rotate;\n    if (hFlip) {\n      if (vFlip) {\n        rotation += 2;\n      } else {\n        transformations.push(\n          \"translate(\" + (box.width + box.left).toString() + \" \" + (0 - box.top).toString() + \")\"\n        );\n        transformations.push(\"scale(-1 1)\");\n        box.top = box.left = 0;\n      }\n    } else if (vFlip) {\n      transformations.push(\n        \"translate(\" + (0 - box.left).toString() + \" \" + (box.height + box.top).toString() + \")\"\n      );\n      transformations.push(\"scale(1 -1)\");\n      box.top = box.left = 0;\n    }\n    let tempValue;\n    if (rotation < 0) {\n      rotation -= Math.floor(rotation / 4) * 4;\n    }\n    rotation = rotation % 4;\n    switch (rotation) {\n      case 1:\n        tempValue = box.height / 2 + box.top;\n        transformations.unshift(\n          \"rotate(90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\"\n        );\n        break;\n      case 2:\n        transformations.unshift(\n          \"rotate(180 \" + (box.width / 2 + box.left).toString() + \" \" + (box.height / 2 + box.top).toString() + \")\"\n        );\n        break;\n      case 3:\n        tempValue = box.width / 2 + box.left;\n        transformations.unshift(\n          \"rotate(-90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\"\n        );\n        break;\n    }\n    if (rotation % 2 === 1) {\n      if (box.left !== box.top) {\n        tempValue = box.left;\n        box.left = box.top;\n        box.top = tempValue;\n      }\n      if (box.width !== box.height) {\n        tempValue = box.width;\n        box.width = box.height;\n        box.height = tempValue;\n      }\n    }\n    if (transformations.length) {\n      body = '<g transform=\"' + transformations.join(\" \") + '\">' + body + \"</g>\";\n    }\n  });\n  const customisationsWidth = fullCustomisations.width;\n  const customisationsHeight = fullCustomisations.height;\n  const boxWidth = box.width;\n  const boxHeight = box.height;\n  let width;\n  let height;\n  if (customisationsWidth === null) {\n    height = customisationsHeight === null ? \"1em\" : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n    width = calculateSize(height, boxWidth / boxHeight);\n  } else {\n    width = customisationsWidth === \"auto\" ? boxWidth : customisationsWidth;\n    height = customisationsHeight === null ? calculateSize(width, boxHeight / boxWidth) : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n  }\n  const result = {\n    attributes: {\n      width: width.toString(),\n      height: height.toString(),\n      viewBox: box.left.toString() + \" \" + box.top.toString() + \" \" + boxWidth.toString() + \" \" + boxHeight.toString()\n    },\n    body\n  };\n  return result;\n}\n\nconst regex = /\\sid=\"(\\S+)\"/g;\nconst randomPrefix = \"IconifyId\" + Date.now().toString(16) + (Math.random() * 16777216 | 0).toString(16);\nlet counter = 0;\nfunction replaceIDs(body, prefix = randomPrefix) {\n  const ids = [];\n  let match;\n  while (match = regex.exec(body)) {\n    ids.push(match[1]);\n  }\n  if (!ids.length) {\n    return body;\n  }\n  ids.forEach((id) => {\n    const newID = typeof prefix === \"function\" ? prefix(id) : prefix + (counter++).toString();\n    const escapedID = id.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    body = body.replace(\n      new RegExp('([#;\"])(' + escapedID + ')([\")]|\\\\.[a-z])', \"g\"),\n      \"$1\" + newID + \"$3\"\n    );\n  });\n  return body;\n}\n\nconst storage = /* @__PURE__ */ Object.create(null);\nfunction setAPIModule(provider, item) {\n  storage[provider] = item;\n}\nfunction getAPIModule(provider) {\n  return storage[provider] || storage[\"\"];\n}\n\nfunction createAPIConfig(source) {\n  let resources;\n  if (typeof source.resources === \"string\") {\n    resources = [source.resources];\n  } else {\n    resources = source.resources;\n    if (!(resources instanceof Array) || !resources.length) {\n      return null;\n    }\n  }\n  const result = {\n    resources,\n    path: source.path || \"/\",\n    maxURL: source.maxURL || 500,\n    rotate: source.rotate || 750,\n    timeout: source.timeout || 5e3,\n    random: source.random === true,\n    index: source.index || 0,\n    dataAfterTimeout: source.dataAfterTimeout !== false\n  };\n  return result;\n}\nconst configStorage = /* @__PURE__ */ Object.create(null);\nconst fallBackAPISources = [\n  \"https://api.simplesvg.com\",\n  \"https://api.unisvg.com\"\n];\nconst fallBackAPI = [];\nwhile (fallBackAPISources.length > 0) {\n  if (fallBackAPISources.length === 1) {\n    fallBackAPI.push(fallBackAPISources.shift());\n  } else {\n    if (Math.random() > 0.5) {\n      fallBackAPI.push(fallBackAPISources.shift());\n    } else {\n      fallBackAPI.push(fallBackAPISources.pop());\n    }\n  }\n}\nconfigStorage[\"\"] = createAPIConfig({\n  resources: [\"https://api.iconify.design\"].concat(fallBackAPI)\n});\nfunction addAPIProvider(provider, customConfig) {\n  const config = createAPIConfig(customConfig);\n  if (config === null) {\n    return false;\n  }\n  configStorage[provider] = config;\n  return true;\n}\nfunction getAPIConfig(provider) {\n  return configStorage[provider];\n}\nfunction listAPIProviders() {\n  return Object.keys(configStorage);\n}\n\nconst detectFetch = () => {\n  let callback;\n  try {\n    callback = fetch;\n    if (typeof callback === \"function\") {\n      return callback;\n    }\n  } catch (err) {\n  }\n};\nlet fetchModule = detectFetch();\nfunction setFetch(fetch2) {\n  fetchModule = fetch2;\n}\nfunction getFetch() {\n  return fetchModule;\n}\nfunction calculateMaxLength(provider, prefix) {\n  const config = getAPIConfig(provider);\n  if (!config) {\n    return 0;\n  }\n  let result;\n  if (!config.maxURL) {\n    result = 0;\n  } else {\n    let maxHostLength = 0;\n    config.resources.forEach((item) => {\n      const host = item;\n      maxHostLength = Math.max(maxHostLength, host.length);\n    });\n    const url = prefix + \".json?icons=\";\n    result = config.maxURL - maxHostLength - config.path.length - url.length;\n  }\n  return result;\n}\nfunction shouldAbort(status) {\n  return status === 404;\n}\nconst prepare = (provider, prefix, icons) => {\n  const results = [];\n  const maxLength = calculateMaxLength(provider, prefix);\n  const type = \"icons\";\n  let item = {\n    type,\n    provider,\n    prefix,\n    icons: []\n  };\n  let length = 0;\n  icons.forEach((name, index) => {\n    length += name.length + 1;\n    if (length >= maxLength && index > 0) {\n      results.push(item);\n      item = {\n        type,\n        provider,\n        prefix,\n        icons: []\n      };\n      length = name.length;\n    }\n    item.icons.push(name);\n  });\n  results.push(item);\n  return results;\n};\nfunction getPath(provider) {\n  if (typeof provider === \"string\") {\n    const config = getAPIConfig(provider);\n    if (config) {\n      return config.path;\n    }\n  }\n  return \"/\";\n}\nconst send = (host, params, callback) => {\n  if (!fetchModule) {\n    callback(\"abort\", 424);\n    return;\n  }\n  let path = getPath(params.provider);\n  switch (params.type) {\n    case \"icons\": {\n      const prefix = params.prefix;\n      const icons = params.icons;\n      const iconsList = icons.join(\",\");\n      const urlParams = new URLSearchParams({\n        icons: iconsList\n      });\n      path += prefix + \".json?\" + urlParams.toString();\n      break;\n    }\n    case \"custom\": {\n      const uri = params.uri;\n      path += uri.slice(0, 1) === \"/\" ? uri.slice(1) : uri;\n      break;\n    }\n    default:\n      callback(\"abort\", 400);\n      return;\n  }\n  let defaultError = 503;\n  fetchModule(host + path).then((response) => {\n    const status = response.status;\n    if (status !== 200) {\n      setTimeout(() => {\n        callback(shouldAbort(status) ? \"abort\" : \"next\", status);\n      });\n      return;\n    }\n    defaultError = 501;\n    return response.json();\n  }).then((data) => {\n    if (typeof data !== \"object\" || data === null) {\n      setTimeout(() => {\n        callback(\"next\", defaultError);\n      });\n      return;\n    }\n    setTimeout(() => {\n      callback(\"success\", data);\n    });\n  }).catch(() => {\n    callback(\"next\", defaultError);\n  });\n};\nconst fetchAPIModule = {\n  prepare,\n  send\n};\n\nfunction sortIcons(icons) {\n  const result = {\n    loaded: [],\n    missing: [],\n    pending: []\n  };\n  const storage = /* @__PURE__ */ Object.create(null);\n  icons.sort((a, b) => {\n    if (a.provider !== b.provider) {\n      return a.provider.localeCompare(b.provider);\n    }\n    if (a.prefix !== b.prefix) {\n      return a.prefix.localeCompare(b.prefix);\n    }\n    return a.name.localeCompare(b.name);\n  });\n  let lastIcon = {\n    provider: \"\",\n    prefix: \"\",\n    name: \"\"\n  };\n  icons.forEach((icon) => {\n    if (lastIcon.name === icon.name && lastIcon.prefix === icon.prefix && lastIcon.provider === icon.provider) {\n      return;\n    }\n    lastIcon = icon;\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    const name = icon.name;\n    const providerStorage = storage[provider] || (storage[provider] = /* @__PURE__ */ Object.create(null));\n    const localStorage = providerStorage[prefix] || (providerStorage[prefix] = getStorage(provider, prefix));\n    let list;\n    if (name in localStorage.icons) {\n      list = result.loaded;\n    } else if (prefix === \"\" || localStorage.missing.has(name)) {\n      list = result.missing;\n    } else {\n      list = result.pending;\n    }\n    const item = {\n      provider,\n      prefix,\n      name\n    };\n    list.push(item);\n  });\n  return result;\n}\n\nfunction removeCallback(storages, id) {\n  storages.forEach((storage) => {\n    const items = storage.loaderCallbacks;\n    if (items) {\n      storage.loaderCallbacks = items.filter((row) => row.id !== id);\n    }\n  });\n}\nfunction updateCallbacks(storage) {\n  if (!storage.pendingCallbacksFlag) {\n    storage.pendingCallbacksFlag = true;\n    setTimeout(() => {\n      storage.pendingCallbacksFlag = false;\n      const items = storage.loaderCallbacks ? storage.loaderCallbacks.slice(0) : [];\n      if (!items.length) {\n        return;\n      }\n      let hasPending = false;\n      const provider = storage.provider;\n      const prefix = storage.prefix;\n      items.forEach((item) => {\n        const icons = item.icons;\n        const oldLength = icons.pending.length;\n        icons.pending = icons.pending.filter((icon) => {\n          if (icon.prefix !== prefix) {\n            return true;\n          }\n          const name = icon.name;\n          if (storage.icons[name]) {\n            icons.loaded.push({\n              provider,\n              prefix,\n              name\n            });\n          } else if (storage.missing.has(name)) {\n            icons.missing.push({\n              provider,\n              prefix,\n              name\n            });\n          } else {\n            hasPending = true;\n            return true;\n          }\n          return false;\n        });\n        if (icons.pending.length !== oldLength) {\n          if (!hasPending) {\n            removeCallback([storage], item.id);\n          }\n          item.callback(\n            icons.loaded.slice(0),\n            icons.missing.slice(0),\n            icons.pending.slice(0),\n            item.abort\n          );\n        }\n      });\n    });\n  }\n}\nlet idCounter = 0;\nfunction storeCallback(callback, icons, pendingSources) {\n  const id = idCounter++;\n  const abort = removeCallback.bind(null, pendingSources, id);\n  if (!icons.pending.length) {\n    return abort;\n  }\n  const item = {\n    id,\n    icons,\n    callback,\n    abort\n  };\n  pendingSources.forEach((storage) => {\n    (storage.loaderCallbacks || (storage.loaderCallbacks = [])).push(item);\n  });\n  return abort;\n}\n\nfunction listToIcons(list, validate = true, simpleNames = false) {\n  const result = [];\n  list.forEach((item) => {\n    const icon = typeof item === \"string\" ? stringToIcon(item, validate, simpleNames) : item;\n    if (icon) {\n      result.push(icon);\n    }\n  });\n  return result;\n}\n\n// src/config.ts\nvar defaultConfig = {\n  resources: [],\n  index: 0,\n  timeout: 2e3,\n  rotate: 750,\n  random: false,\n  dataAfterTimeout: false\n};\n\n// src/query.ts\nfunction sendQuery(config, payload, query, done) {\n  const resourcesCount = config.resources.length;\n  const startIndex = config.random ? Math.floor(Math.random() * resourcesCount) : config.index;\n  let resources;\n  if (config.random) {\n    let list = config.resources.slice(0);\n    resources = [];\n    while (list.length > 1) {\n      const nextIndex = Math.floor(Math.random() * list.length);\n      resources.push(list[nextIndex]);\n      list = list.slice(0, nextIndex).concat(list.slice(nextIndex + 1));\n    }\n    resources = resources.concat(list);\n  } else {\n    resources = config.resources.slice(startIndex).concat(config.resources.slice(0, startIndex));\n  }\n  const startTime = Date.now();\n  let status = \"pending\";\n  let queriesSent = 0;\n  let lastError;\n  let timer = null;\n  let queue = [];\n  let doneCallbacks = [];\n  if (typeof done === \"function\") {\n    doneCallbacks.push(done);\n  }\n  function resetTimer() {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  }\n  function abort() {\n    if (status === \"pending\") {\n      status = \"aborted\";\n    }\n    resetTimer();\n    queue.forEach((item) => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function subscribe(callback, overwrite) {\n    if (overwrite) {\n      doneCallbacks = [];\n    }\n    if (typeof callback === \"function\") {\n      doneCallbacks.push(callback);\n    }\n  }\n  function getQueryStatus() {\n    return {\n      startTime,\n      payload,\n      status,\n      queriesSent,\n      queriesPending: queue.length,\n      subscribe,\n      abort\n    };\n  }\n  function failQuery() {\n    status = \"failed\";\n    doneCallbacks.forEach((callback) => {\n      callback(void 0, lastError);\n    });\n  }\n  function clearQueue() {\n    queue.forEach((item) => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function moduleResponse(item, response, data) {\n    const isError = response !== \"success\";\n    queue = queue.filter((queued) => queued !== item);\n    switch (status) {\n      case \"pending\":\n        break;\n      case \"failed\":\n        if (isError || !config.dataAfterTimeout) {\n          return;\n        }\n        break;\n      default:\n        return;\n    }\n    if (response === \"abort\") {\n      lastError = data;\n      failQuery();\n      return;\n    }\n    if (isError) {\n      lastError = data;\n      if (!queue.length) {\n        if (!resources.length) {\n          failQuery();\n        } else {\n          execNext();\n        }\n      }\n      return;\n    }\n    resetTimer();\n    clearQueue();\n    if (!config.random) {\n      const index = config.resources.indexOf(item.resource);\n      if (index !== -1 && index !== config.index) {\n        config.index = index;\n      }\n    }\n    status = \"completed\";\n    doneCallbacks.forEach((callback) => {\n      callback(data);\n    });\n  }\n  function execNext() {\n    if (status !== \"pending\") {\n      return;\n    }\n    resetTimer();\n    const resource = resources.shift();\n    if (resource === void 0) {\n      if (queue.length) {\n        timer = setTimeout(() => {\n          resetTimer();\n          if (status === \"pending\") {\n            clearQueue();\n            failQuery();\n          }\n        }, config.timeout);\n        return;\n      }\n      failQuery();\n      return;\n    }\n    const item = {\n      status: \"pending\",\n      resource,\n      callback: (status2, data) => {\n        moduleResponse(item, status2, data);\n      }\n    };\n    queue.push(item);\n    queriesSent++;\n    timer = setTimeout(execNext, config.rotate);\n    query(resource, payload, item.callback);\n  }\n  setTimeout(execNext);\n  return getQueryStatus;\n}\n\n// src/index.ts\nfunction initRedundancy(cfg) {\n  const config = {\n    ...defaultConfig,\n    ...cfg\n  };\n  let queries = [];\n  function cleanup() {\n    queries = queries.filter((item) => item().status === \"pending\");\n  }\n  function query(payload, queryCallback, doneCallback) {\n    const query2 = sendQuery(\n      config,\n      payload,\n      queryCallback,\n      (data, error) => {\n        cleanup();\n        if (doneCallback) {\n          doneCallback(data, error);\n        }\n      }\n    );\n    queries.push(query2);\n    return query2;\n  }\n  function find(callback) {\n    return queries.find((value) => {\n      return callback(value);\n    }) || null;\n  }\n  const instance = {\n    query,\n    find,\n    setIndex: (index) => {\n      config.index = index;\n    },\n    getIndex: () => config.index,\n    cleanup\n  };\n  return instance;\n}\n\nfunction emptyCallback$1() {\n}\nconst redundancyCache = /* @__PURE__ */ Object.create(null);\nfunction getRedundancyCache(provider) {\n  if (!redundancyCache[provider]) {\n    const config = getAPIConfig(provider);\n    if (!config) {\n      return;\n    }\n    const redundancy = initRedundancy(config);\n    const cachedReundancy = {\n      config,\n      redundancy\n    };\n    redundancyCache[provider] = cachedReundancy;\n  }\n  return redundancyCache[provider];\n}\nfunction sendAPIQuery(target, query, callback) {\n  let redundancy;\n  let send;\n  if (typeof target === \"string\") {\n    const api = getAPIModule(target);\n    if (!api) {\n      callback(void 0, 424);\n      return emptyCallback$1;\n    }\n    send = api.send;\n    const cached = getRedundancyCache(target);\n    if (cached) {\n      redundancy = cached.redundancy;\n    }\n  } else {\n    const config = createAPIConfig(target);\n    if (config) {\n      redundancy = initRedundancy(config);\n      const moduleKey = target.resources ? target.resources[0] : \"\";\n      const api = getAPIModule(moduleKey);\n      if (api) {\n        send = api.send;\n      }\n    }\n  }\n  if (!redundancy || !send) {\n    callback(void 0, 424);\n    return emptyCallback$1;\n  }\n  return redundancy.query(query, send, callback)().abort;\n}\n\nconst browserCacheVersion = \"iconify2\";\nconst browserCachePrefix = \"iconify\";\nconst browserCacheCountKey = browserCachePrefix + \"-count\";\nconst browserCacheVersionKey = browserCachePrefix + \"-version\";\nconst browserStorageHour = 36e5;\nconst browserStorageCacheExpiration = 168;\n\nfunction getStoredItem(func, key) {\n  try {\n    return func.getItem(key);\n  } catch (err) {\n  }\n}\nfunction setStoredItem(func, key, value) {\n  try {\n    func.setItem(key, value);\n    return true;\n  } catch (err) {\n  }\n}\nfunction removeStoredItem(func, key) {\n  try {\n    func.removeItem(key);\n  } catch (err) {\n  }\n}\n\nfunction setBrowserStorageItemsCount(storage, value) {\n  return setStoredItem(storage, browserCacheCountKey, value.toString());\n}\nfunction getBrowserStorageItemsCount(storage) {\n  return parseInt(getStoredItem(storage, browserCacheCountKey)) || 0;\n}\n\nconst browserStorageConfig = {\n  local: true,\n  session: true\n};\nconst browserStorageEmptyItems = {\n  local: /* @__PURE__ */ new Set(),\n  session: /* @__PURE__ */ new Set()\n};\nlet browserStorageStatus = false;\nfunction setBrowserStorageStatus(status) {\n  browserStorageStatus = status;\n}\n\nlet _window = typeof window === \"undefined\" ? {} : window;\nfunction getBrowserStorage(key) {\n  const attr = key + \"Storage\";\n  try {\n    if (_window && _window[attr] && typeof _window[attr].length === \"number\") {\n      return _window[attr];\n    }\n  } catch (err) {\n  }\n  browserStorageConfig[key] = false;\n}\n\nfunction iterateBrowserStorage(key, callback) {\n  const func = getBrowserStorage(key);\n  if (!func) {\n    return;\n  }\n  const version = getStoredItem(func, browserCacheVersionKey);\n  if (version !== browserCacheVersion) {\n    if (version) {\n      const total2 = getBrowserStorageItemsCount(func);\n      for (let i = 0; i < total2; i++) {\n        removeStoredItem(func, browserCachePrefix + i.toString());\n      }\n    }\n    setStoredItem(func, browserCacheVersionKey, browserCacheVersion);\n    setBrowserStorageItemsCount(func, 0);\n    return;\n  }\n  const minTime = Math.floor(Date.now() / browserStorageHour) - browserStorageCacheExpiration;\n  const parseItem = (index) => {\n    const name = browserCachePrefix + index.toString();\n    const item = getStoredItem(func, name);\n    if (typeof item !== \"string\") {\n      return;\n    }\n    try {\n      const data = JSON.parse(item);\n      if (typeof data === \"object\" && typeof data.cached === \"number\" && data.cached > minTime && typeof data.provider === \"string\" && typeof data.data === \"object\" && typeof data.data.prefix === \"string\" && callback(data, index)) {\n        return true;\n      }\n    } catch (err) {\n    }\n    removeStoredItem(func, name);\n  };\n  let total = getBrowserStorageItemsCount(func);\n  for (let i = total - 1; i >= 0; i--) {\n    if (!parseItem(i)) {\n      if (i === total - 1) {\n        total--;\n        setBrowserStorageItemsCount(func, total);\n      } else {\n        browserStorageEmptyItems[key].add(i);\n      }\n    }\n  }\n}\n\nfunction initBrowserStorage() {\n  if (browserStorageStatus) {\n    return;\n  }\n  setBrowserStorageStatus(true);\n  for (const key in browserStorageConfig) {\n    iterateBrowserStorage(key, (item) => {\n      const iconSet = item.data;\n      const provider = item.provider;\n      const prefix = iconSet.prefix;\n      const storage = getStorage(\n        provider,\n        prefix\n      );\n      if (!addIconSet(storage, iconSet).length) {\n        return false;\n      }\n      const lastModified = iconSet.lastModified || -1;\n      storage.lastModifiedCached = storage.lastModifiedCached ? Math.min(storage.lastModifiedCached, lastModified) : lastModified;\n      return true;\n    });\n  }\n}\n\nfunction updateLastModified(storage, lastModified) {\n  const lastValue = storage.lastModifiedCached;\n  if (lastValue && lastValue >= lastModified) {\n    return lastValue === lastModified;\n  }\n  storage.lastModifiedCached = lastModified;\n  if (lastValue) {\n    for (const key in browserStorageConfig) {\n      iterateBrowserStorage(key, (item) => {\n        const iconSet = item.data;\n        return item.provider !== storage.provider || iconSet.prefix !== storage.prefix || iconSet.lastModified === lastModified;\n      });\n    }\n  }\n  return true;\n}\nfunction storeInBrowserStorage(storage, data) {\n  if (!browserStorageStatus) {\n    initBrowserStorage();\n  }\n  function store(key) {\n    let func;\n    if (!browserStorageConfig[key] || !(func = getBrowserStorage(key))) {\n      return;\n    }\n    const set = browserStorageEmptyItems[key];\n    let index;\n    if (set.size) {\n      set.delete(index = Array.from(set).shift());\n    } else {\n      index = getBrowserStorageItemsCount(func);\n      if (!setBrowserStorageItemsCount(func, index + 1)) {\n        return;\n      }\n    }\n    const item = {\n      cached: Math.floor(Date.now() / browserStorageHour),\n      provider: storage.provider,\n      data\n    };\n    return setStoredItem(\n      func,\n      browserCachePrefix + index.toString(),\n      JSON.stringify(item)\n    );\n  }\n  if (data.lastModified && !updateLastModified(storage, data.lastModified)) {\n    return;\n  }\n  if (!Object.keys(data.icons).length) {\n    return;\n  }\n  if (data.not_found) {\n    data = Object.assign({}, data);\n    delete data.not_found;\n  }\n  if (!store(\"local\")) {\n    store(\"session\");\n  }\n}\n\nfunction emptyCallback() {\n}\nfunction loadedNewIcons(storage) {\n  if (!storage.iconsLoaderFlag) {\n    storage.iconsLoaderFlag = true;\n    setTimeout(() => {\n      storage.iconsLoaderFlag = false;\n      updateCallbacks(storage);\n    });\n  }\n}\nfunction loadNewIcons(storage, icons) {\n  if (!storage.iconsToLoad) {\n    storage.iconsToLoad = icons;\n  } else {\n    storage.iconsToLoad = storage.iconsToLoad.concat(icons).sort();\n  }\n  if (!storage.iconsQueueFlag) {\n    storage.iconsQueueFlag = true;\n    setTimeout(() => {\n      storage.iconsQueueFlag = false;\n      const { provider, prefix } = storage;\n      const icons2 = storage.iconsToLoad;\n      delete storage.iconsToLoad;\n      let api;\n      if (!icons2 || !(api = getAPIModule(provider))) {\n        return;\n      }\n      const params = api.prepare(provider, prefix, icons2);\n      params.forEach((item) => {\n        sendAPIQuery(provider, item, (data, error) => {\n          if (typeof data !== \"object\") {\n            if (error !== 404) {\n              return;\n            }\n            item.icons.forEach((name) => {\n              storage.missing.add(name);\n            });\n          } else {\n            try {\n              const parsed = addIconSet(\n                storage,\n                data\n              );\n              if (!parsed.length) {\n                return;\n              }\n              const pending = storage.pendingIcons;\n              if (pending) {\n                parsed.forEach((name) => {\n                  pending.delete(name);\n                });\n              }\n              storeInBrowserStorage(storage, data);\n            } catch (err) {\n              console.error(err);\n            }\n          }\n          loadedNewIcons(storage);\n        });\n      });\n    });\n  }\n}\nconst loadIcons = (icons, callback) => {\n  const cleanedIcons = listToIcons(icons, true, allowSimpleNames());\n  const sortedIcons = sortIcons(cleanedIcons);\n  if (!sortedIcons.pending.length) {\n    let callCallback = true;\n    if (callback) {\n      setTimeout(() => {\n        if (callCallback) {\n          callback(\n            sortedIcons.loaded,\n            sortedIcons.missing,\n            sortedIcons.pending,\n            emptyCallback\n          );\n        }\n      });\n    }\n    return () => {\n      callCallback = false;\n    };\n  }\n  const newIcons = /* @__PURE__ */ Object.create(null);\n  const sources = [];\n  let lastProvider, lastPrefix;\n  sortedIcons.pending.forEach((icon) => {\n    const { provider, prefix } = icon;\n    if (prefix === lastPrefix && provider === lastProvider) {\n      return;\n    }\n    lastProvider = provider;\n    lastPrefix = prefix;\n    sources.push(getStorage(provider, prefix));\n    const providerNewIcons = newIcons[provider] || (newIcons[provider] = /* @__PURE__ */ Object.create(null));\n    if (!providerNewIcons[prefix]) {\n      providerNewIcons[prefix] = [];\n    }\n  });\n  sortedIcons.pending.forEach((icon) => {\n    const { provider, prefix, name } = icon;\n    const storage = getStorage(provider, prefix);\n    const pendingQueue = storage.pendingIcons || (storage.pendingIcons = /* @__PURE__ */ new Set());\n    if (!pendingQueue.has(name)) {\n      pendingQueue.add(name);\n      newIcons[provider][prefix].push(name);\n    }\n  });\n  sources.forEach((storage) => {\n    const { provider, prefix } = storage;\n    if (newIcons[provider][prefix].length) {\n      loadNewIcons(storage, newIcons[provider][prefix]);\n    }\n  });\n  return callback ? storeCallback(callback, sortedIcons, sources) : emptyCallback;\n};\nconst loadIcon = (icon) => {\n  return new Promise((fulfill, reject) => {\n    const iconObj = typeof icon === \"string\" ? stringToIcon(icon) : icon;\n    loadIcons([iconObj || icon], (loaded) => {\n      if (loaded.length && iconObj) {\n        const data = getIconData(iconObj);\n        if (data) {\n          fulfill({\n            ...defaultIconProps,\n            ...data\n          });\n          return;\n        }\n      }\n      reject(icon);\n    });\n  });\n};\n\nfunction toggleBrowserCache(storage, value) {\n  switch (storage) {\n    case \"local\":\n    case \"session\":\n      browserStorageConfig[storage] = value;\n      break;\n    case \"all\":\n      for (const key in browserStorageConfig) {\n        browserStorageConfig[key] = value;\n      }\n      break;\n  }\n}\n\nfunction mergeCustomisations(defaults, item) {\n  const result = {\n    ...defaults\n  };\n  for (const key in item) {\n    const value = item[key];\n    const valueType = typeof value;\n    if (key in defaultIconSizeCustomisations) {\n      if (value === null || value && (valueType === \"string\" || valueType === \"number\")) {\n        result[key] = value;\n      }\n    } else if (valueType === typeof result[key]) {\n      result[key] = key === \"rotate\" ? value % 4 : value;\n    }\n  }\n  return result;\n}\n\nconst separator = /[\\s,]+/;\nfunction flipFromString(custom, flip) {\n  flip.split(separator).forEach((str) => {\n    const value = str.trim();\n    switch (value) {\n      case \"horizontal\":\n        custom.hFlip = true;\n        break;\n      case \"vertical\":\n        custom.vFlip = true;\n        break;\n    }\n  });\n}\n\nfunction rotateFromString(value, defaultValue = 0) {\n  const units = value.replace(/^-?[0-9.]*/, \"\");\n  function cleanup(value2) {\n    while (value2 < 0) {\n      value2 += 4;\n    }\n    return value2 % 4;\n  }\n  if (units === \"\") {\n    const num = parseInt(value);\n    return isNaN(num) ? 0 : cleanup(num);\n  } else if (units !== value) {\n    let split = 0;\n    switch (units) {\n      case \"%\":\n        split = 25;\n        break;\n      case \"deg\":\n        split = 90;\n    }\n    if (split) {\n      let num = parseFloat(value.slice(0, value.length - units.length));\n      if (isNaN(num)) {\n        return 0;\n      }\n      num = num / split;\n      return num % 1 === 0 ? cleanup(num) : 0;\n    }\n  }\n  return defaultValue;\n}\n\nfunction iconToHTML(body, attributes) {\n  let renderAttribsHTML = body.indexOf(\"xlink:\") === -1 ? \"\" : ' xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\n  for (const attr in attributes) {\n    renderAttribsHTML += \" \" + attr + '=\"' + attributes[attr] + '\"';\n  }\n  return '<svg xmlns=\"http://www.w3.org/2000/svg\"' + renderAttribsHTML + \">\" + body + \"</svg>\";\n}\n\nfunction encodeSVGforURL(svg) {\n  return svg.replace(/\"/g, \"'\").replace(/%/g, \"%25\").replace(/#/g, \"%23\").replace(/</g, \"%3C\").replace(/>/g, \"%3E\").replace(/\\s+/g, \" \");\n}\nfunction svgToURL(svg) {\n  return 'url(\"data:image/svg+xml,' + encodeSVGforURL(svg) + '\")';\n}\n\nconst defaultExtendedIconCustomisations = {\n    ...defaultIconCustomisations,\n    inline: false,\n};\n\n/**\n * Default SVG attributes\n */\nconst svgDefaults = {\n    'xmlns': 'http://www.w3.org/2000/svg',\n    'xmlnsXlink': 'http://www.w3.org/1999/xlink',\n    'aria-hidden': true,\n    'role': 'img',\n};\n/**\n * Style modes\n */\nconst commonProps = {\n    display: 'inline-block',\n};\nconst monotoneProps = {\n    backgroundColor: 'currentColor',\n};\nconst coloredProps = {\n    backgroundColor: 'transparent',\n};\n// Dynamically add common props to variables above\nconst propsToAdd = {\n    Image: 'var(--svg)',\n    Repeat: 'no-repeat',\n    Size: '100% 100%',\n};\nconst propsToAddTo = {\n    webkitMask: monotoneProps,\n    mask: monotoneProps,\n    background: coloredProps,\n};\nfor (const prefix in propsToAddTo) {\n    const list = propsToAddTo[prefix];\n    for (const prop in propsToAdd) {\n        list[prefix + prop] = propsToAdd[prop];\n    }\n}\n/**\n * Default values for customisations for inline icon\n */\nconst inlineDefaults = {\n    ...defaultExtendedIconCustomisations,\n    inline: true,\n};\n/**\n * Fix size: add 'px' to numbers\n */\nfunction fixSize(value) {\n    return value + (value.match(/^[-0-9.]+$/) ? 'px' : '');\n}\n/**\n * Render icon\n */\nconst render = (\n// Icon must be validated before calling this function\nicon, \n// Partial properties\nprops, \n// True if icon should have vertical-align added\ninline, \n// Optional reference for SVG/SPAN, extracted by React.forwardRef()\nref) => {\n    // Get default properties\n    const defaultProps = inline\n        ? inlineDefaults\n        : defaultExtendedIconCustomisations;\n    // Get all customisations\n    const customisations = mergeCustomisations(defaultProps, props);\n    // Check mode\n    const mode = props.mode || 'svg';\n    // Create style\n    const style = {};\n    const customStyle = props.style || {};\n    // Create SVG component properties\n    const componentProps = {\n        ...(mode === 'svg' ? svgDefaults : {}),\n        ref,\n    };\n    // Get element properties\n    for (let key in props) {\n        const value = props[key];\n        if (value === void 0) {\n            continue;\n        }\n        switch (key) {\n            // Properties to ignore\n            case 'icon':\n            case 'style':\n            case 'children':\n            case 'onLoad':\n            case 'mode':\n            case '_ref':\n            case '_inline':\n                break;\n            // Boolean attributes\n            case 'inline':\n            case 'hFlip':\n            case 'vFlip':\n                customisations[key] =\n                    value === true || value === 'true' || value === 1;\n                break;\n            // Flip as string: 'horizontal,vertical'\n            case 'flip':\n                if (typeof value === 'string') {\n                    flipFromString(customisations, value);\n                }\n                break;\n            // Color: copy to style\n            case 'color':\n                style.color = value;\n                break;\n            // Rotation as string\n            case 'rotate':\n                if (typeof value === 'string') {\n                    customisations[key] = rotateFromString(value);\n                }\n                else if (typeof value === 'number') {\n                    customisations[key] = value;\n                }\n                break;\n            // Remove aria-hidden\n            case 'ariaHidden':\n            case 'aria-hidden':\n                if (value !== true && value !== 'true') {\n                    delete componentProps['aria-hidden'];\n                }\n                break;\n            // Copy missing property if it does not exist in customisations\n            default:\n                if (defaultProps[key] === void 0) {\n                    componentProps[key] = value;\n                }\n        }\n    }\n    // Generate icon\n    const item = iconToSVG(icon, customisations);\n    const renderAttribs = item.attributes;\n    // Inline display\n    if (customisations.inline) {\n        style.verticalAlign = '-0.125em';\n    }\n    if (mode === 'svg') {\n        // Add style\n        componentProps.style = {\n            ...style,\n            ...customStyle,\n        };\n        // Add icon stuff\n        Object.assign(componentProps, renderAttribs);\n        // Counter for ids based on \"id\" property to render icons consistently on server and client\n        let localCounter = 0;\n        let id = props.id;\n        if (typeof id === 'string') {\n            // Convert '-' to '_' to avoid errors in animations\n            id = id.replace(/-/g, '_');\n        }\n        // Add icon stuff\n        componentProps.dangerouslySetInnerHTML = {\n            __html: replaceIDs(item.body, id ? () => id + 'ID' + localCounter++ : 'iconifyReact'),\n        };\n        return React.createElement('svg', componentProps);\n    }\n    // Render <span> with style\n    const { body, width, height } = icon;\n    const useMask = mode === 'mask' ||\n        (mode === 'bg' ? false : body.indexOf('currentColor') !== -1);\n    // Generate SVG\n    const html = iconToHTML(body, {\n        ...renderAttribs,\n        width: width + '',\n        height: height + '',\n    });\n    // Generate style\n    componentProps.style = {\n        ...style,\n        '--svg': svgToURL(html),\n        'width': fixSize(renderAttribs.width),\n        'height': fixSize(renderAttribs.height),\n        ...commonProps,\n        ...(useMask ? monotoneProps : coloredProps),\n        ...customStyle,\n    };\n    return React.createElement('span', componentProps);\n};\n\n/**\n * Enable cache\n */\nfunction enableCache(storage) {\n    toggleBrowserCache(storage, true);\n}\n/**\n * Disable cache\n */\nfunction disableCache(storage) {\n    toggleBrowserCache(storage, false);\n}\n/**\n * Initialise stuff\n */\n// Enable short names\nallowSimpleNames(true);\n// Set API module\nsetAPIModule('', fetchAPIModule);\n/**\n * Browser stuff\n */\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n    // Set cache and load existing cache\n    initBrowserStorage();\n    const _window = window;\n    // Load icons from global \"IconifyPreload\"\n    if (_window.IconifyPreload !== void 0) {\n        const preload = _window.IconifyPreload;\n        const err = 'Invalid IconifyPreload syntax.';\n        if (typeof preload === 'object' && preload !== null) {\n            (preload instanceof Array ? preload : [preload]).forEach((item) => {\n                try {\n                    if (\n                    // Check if item is an object and not null/array\n                    typeof item !== 'object' ||\n                        item === null ||\n                        item instanceof Array ||\n                        // Check for 'icons' and 'prefix'\n                        typeof item.icons !== 'object' ||\n                        typeof item.prefix !== 'string' ||\n                        // Add icon set\n                        !addCollection(item)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            });\n        }\n    }\n    // Set API from global \"IconifyProviders\"\n    if (_window.IconifyProviders !== void 0) {\n        const providers = _window.IconifyProviders;\n        if (typeof providers === 'object' && providers !== null) {\n            for (let key in providers) {\n                const err = 'IconifyProviders[' + key + '] is invalid.';\n                try {\n                    const value = providers[key];\n                    if (typeof value !== 'object' ||\n                        !value ||\n                        value.resources === void 0) {\n                        continue;\n                    }\n                    if (!addAPIProvider(key, value)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            }\n        }\n    }\n}\nclass IconComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // Render placeholder before component is mounted\n            icon: null,\n        };\n    }\n    /**\n     * Abort loading icon\n     */\n    _abortLoading() {\n        if (this._loading) {\n            this._loading.abort();\n            this._loading = null;\n        }\n    }\n    /**\n     * Update state\n     */\n    _setData(icon) {\n        if (this.state.icon !== icon) {\n            this.setState({\n                icon,\n            });\n        }\n    }\n    /**\n     * Check if icon should be loaded\n     */\n    _checkIcon(changed) {\n        const state = this.state;\n        const icon = this.props.icon;\n        // Icon is an object\n        if (typeof icon === 'object' &&\n            icon !== null &&\n            typeof icon.body === 'string') {\n            // Stop loading\n            this._icon = '';\n            this._abortLoading();\n            if (changed || state.icon === null) {\n                // Set data if it was changed\n                this._setData({\n                    data: icon,\n                });\n            }\n            return;\n        }\n        // Invalid icon?\n        let iconName;\n        if (typeof icon !== 'string' ||\n            (iconName = stringToIcon(icon, false, true)) === null) {\n            this._abortLoading();\n            this._setData(null);\n            return;\n        }\n        // Load icon\n        const data = getIconData(iconName);\n        if (!data) {\n            // Icon data is not available\n            if (!this._loading || this._loading.name !== icon) {\n                // New icon to load\n                this._abortLoading();\n                this._icon = '';\n                this._setData(null);\n                if (data !== null) {\n                    // Icon was not loaded\n                    this._loading = {\n                        name: icon,\n                        abort: loadIcons([iconName], this._checkIcon.bind(this, false)),\n                    };\n                }\n            }\n            return;\n        }\n        // Icon data is available\n        if (this._icon !== icon || state.icon === null) {\n            // New icon or icon has been loaded\n            this._abortLoading();\n            this._icon = icon;\n            // Add classes\n            const classes = ['iconify'];\n            if (iconName.prefix !== '') {\n                classes.push('iconify--' + iconName.prefix);\n            }\n            if (iconName.provider !== '') {\n                classes.push('iconify--' + iconName.provider);\n            }\n            // Set data\n            this._setData({\n                data,\n                classes,\n            });\n            if (this.props.onLoad) {\n                this.props.onLoad(icon);\n            }\n        }\n    }\n    /**\n     * Component mounted\n     */\n    componentDidMount() {\n        this._checkIcon(false);\n    }\n    /**\n     * Component updated\n     */\n    componentDidUpdate(oldProps) {\n        if (oldProps.icon !== this.props.icon) {\n            this._checkIcon(true);\n        }\n    }\n    /**\n     * Abort loading\n     */\n    componentWillUnmount() {\n        this._abortLoading();\n    }\n    /**\n     * Render\n     */\n    render() {\n        const props = this.props;\n        const icon = this.state.icon;\n        if (icon === null) {\n            // Render placeholder\n            return props.children\n                ? props.children\n                : React.createElement('span', {});\n        }\n        // Add classes\n        let newProps = props;\n        if (icon.classes) {\n            newProps = {\n                ...props,\n                className: (typeof props.className === 'string'\n                    ? props.className + ' '\n                    : '') + icon.classes.join(' '),\n            };\n        }\n        // Render icon\n        return render({\n            ...defaultIconProps,\n            ...icon.data,\n        }, newProps, props._inline, props._ref);\n    }\n}\n/**\n * Block icon\n *\n * @param props - Component properties\n */\nconst Icon = React.forwardRef(function Icon(props, ref) {\n    const newProps = {\n        ...props,\n        _ref: ref,\n        _inline: false,\n    };\n    return React.createElement(IconComponent, newProps);\n});\n/**\n * Inline icon (has negative verticalAlign that makes it behave like icon font)\n *\n * @param props - Component properties\n */\nconst InlineIcon = React.forwardRef(function InlineIcon(props, ref) {\n    const newProps = { ...props, _ref: ref, _inline: true };\n    return React.createElement(IconComponent, newProps);\n});\n/**\n * Internal API\n */\nconst _api = {\n    getAPIConfig,\n    setAPIModule,\n    sendAPIQuery,\n    setFetch,\n    getFetch,\n    listAPIProviders,\n};\n\nexport { Icon, InlineIcon, _api, addAPIProvider, addCollection, addIcon, iconToSVG as buildIcon, calculateSize, disableCache, enableCache, getIcon, iconExists, listIcons, loadIcon, loadIcons, replaceIDs };\n"],"names":["_ref","links","siteTitle","colorTheme","setColorTheme","useColorMode","nextColorMode","useEffect","document","body","classList","remove","add","_jsx","id","_jsxs","Link","to","className","map","l","i","path","icon","Icon","width","name","onClick","nickname","github","target","href","rel","pageTitle","w","children","data","useStaticQuery","site","siteMetadata","nav","title","Header","Footer","matchIconName","stringToIcon","value","validate","allowSimpleName","provider","colonSeparated","split","slice","length","shift","name2","pop","prefix","result","validateIconName","dashSeparated","join","match","defaultIconDimensions","Object","freeze","left","top","height","defaultIconTransformations","rotate","vFlip","hFlip","defaultIconProps","defaultExtendedIconProps","hidden","mergeIconData","parent","child","obj1","obj2","mergeIconTransformations","key","internalGetIconData","tree","icons","aliases","currentProps","parse","forEach","parseIconSet","callback","names","not_found","Array","push","resolved","create","keys","concat","resolve","getIconsTree","item","optionalPropertyDefaults","checkOptionalProps","defaults","prop","quicklyValidateIconSet","obj","dataStorage","getStorage","providerStorage","missing","Set","newStorage","addIconSet","storage","simpleNames","allowSimpleNames","allow","getIconData","iconName","has","addCollection","added","err","addIconToStorage","addIcon","defaultIconSizeCustomisations","defaultIconCustomisations","unitsSplit","unitsTest","calculateSize","size","ratio","precision","Math","ceil","oldParts","newParts","code","isNumber","test","num","parseFloat","isNaN","regex","randomPrefix","Date","now","toString","random","counter","replaceIDs","ids","exec","newID","escapedID","replace","RegExp","setAPIModule","getAPIModule","createAPIConfig","source","resources","maxURL","timeout","index","dataAfterTimeout","configStorage","fallBackAPISources","fallBackAPI","addAPIProvider","customConfig","config","getAPIConfig","fetchModule","fetch","detectFetch","fetchAPIModule","prepare","results","maxLength","maxHostLength","host","max","url","calculateMaxLength","type","send","params","getPath","iconsList","URLSearchParams","uri","defaultError","then","response","status","json","setTimeout","shouldAbort","catch","removeCallback","storages","items","loaderCallbacks","filter","row","idCounter","defaultConfig","sendQuery","payload","query","done","resourcesCount","startIndex","floor","list","nextIndex","startTime","lastError","queriesSent","timer","queue","doneCallbacks","resetTimer","clearTimeout","abort","subscribe","overwrite","failQuery","clearQueue","execNext","resource","status2","isError","queued","indexOf","moduleResponse","queriesPending","initRedundancy","cfg","queries","cleanup","queryCallback","doneCallback","query2","error","find","setIndex","getIndex","emptyCallback$1","redundancyCache","sendAPIQuery","redundancy","api","cached","cachedReundancy","getRedundancyCache","browserCacheVersion","browserCachePrefix","browserCacheCountKey","browserCacheVersionKey","browserStorageHour","getStoredItem","func","getItem","setStoredItem","setItem","removeStoredItem","removeItem","setBrowserStorageItemsCount","getBrowserStorageItemsCount","parseInt","browserStorageConfig","local","session","browserStorageEmptyItems","browserStorageStatus","_window","window","getBrowserStorage","attr","iterateBrowserStorage","version","total2","minTime","parseItem","JSON","total","initBrowserStorage","iconSet","lastModified","lastModifiedCached","min","storeInBrowserStorage","store","set","delete","from","stringify","lastValue","updateLastModified","assign","emptyCallback","loadedNewIcons","iconsLoaderFlag","pendingCallbacksFlag","hasPending","oldLength","pending","loaded","updateCallbacks","loadIcons","cleanedIcons","listToIcons","sortedIcons","sort","a","b","localeCompare","lastIcon","localStorage","sortIcons","callCallback","newIcons","sources","lastProvider","lastPrefix","providerNewIcons","pendingQueue","pendingIcons","iconsToLoad","iconsQueueFlag","icons2","parsed","console","loadNewIcons","pendingSources","bind","storeCallback","separator","flipFromString","custom","flip","str","trim","rotateFromString","defaultValue","units","value2","defaultExtendedIconCustomisations","inline","svgDefaults","commonProps","display","monotoneProps","backgroundColor","coloredProps","propsToAdd","Image","Repeat","Size","propsToAddTo","webkitMask","mask","background","inlineDefaults","fixSize","render","props","ref","defaultProps","customisations","valueType","mergeCustomisations","mode","style","customStyle","componentProps","color","fullIcon","fullCustomisations","box","transformations","tempValue","rotation","unshift","customisationsWidth","customisationsHeight","boxWidth","boxHeight","attributes","viewBox","iconToSVG","renderAttribs","verticalAlign","localCounter","dangerouslySetInnerHTML","__html","useMask","html","renderAttribsHTML","iconToHTML","svg","encodeSVGforURL","IconifyPreload","preload","e","IconifyProviders","providers","IconComponent","constructor","super","this","state","_abortLoading","_loading","_setData","setState","_checkIcon","changed","_icon","classes","onLoad","componentDidMount","componentDidUpdate","oldProps","componentWillUnmount","newProps","_inline"],"sourceRoot":""}