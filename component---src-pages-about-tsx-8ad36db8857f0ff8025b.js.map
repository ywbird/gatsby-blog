{"version":3,"file":"component---src-pages-about-tsx-8ad36db8857f0ff8025b.js","mappings":"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","sources":["webpack://gatsby-blog/./src/components/header.tsx","webpack://gatsby-blog/./src/themes/light.ts","webpack://gatsby-blog/./src/components/theme.tsx","webpack://gatsby-blog/./src/components/layout.tsx","webpack://gatsby-blog/./src/components/seo.tsx","webpack://gatsby-blog/./src/pages/about.tsx"],"sourcesContent":["import { graphql, Link, useStaticQuery } from 'gatsby';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { globalHistory } from '@reach/router';\r\n\r\ninterface IData {\r\n  site: {\r\n    siteMetadata: {\r\n      title: string;\r\n      navigation: {\r\n        name: string;\r\n        url: string;\r\n      }[];\r\n    };\r\n  };\r\n}\r\n\r\nconst SiteTitle = styled.h1`\r\n  font-size: 3rem;\r\n  color: gray;\r\n  font-weight: 700;\r\n  margin: 3rem 0 1rem 0;\r\n`;\r\n\r\nconst SiteTitleLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: gray;\r\n`;\r\n\r\nconst NavLinks = styled.ul`\r\n  display: flex;\r\n  list-style: none;\r\n  padding-left: 0;\r\n`;\r\n\r\nconst NavItem = styled.li`\r\n  padding: 0 1rem;\r\n  &:first-child {\r\n    padding-left: 0;\r\n  }\r\n  &::after {\r\n    content: ' |';\r\n    white-space: pre;\r\n    color: black;\r\n    pointer-events: none;\r\n  }\r\n  &:last-child::after {\r\n    content: '';\r\n  }\r\n`;\r\n\r\nconst NavLink = styled(Link)<{ to: string; path?: string }>`\r\n  color: ${(props) => (props.path === props.to ? 'black' : 'rebbecapurple')};\r\n  padding-right: 2rem;\r\n  text-decoration: none;\r\n`;\r\n\r\nconst HeaderTag = styled.header`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: baseline;\r\n`;\r\n\r\nconst Header = () => {\r\n  const data: IData = useStaticQuery(graphql`\r\n    query HeaderQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n          navigation {\r\n            name\r\n            url\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n  return (\r\n    <HeaderTag>\r\n      <SiteTitle>\r\n        <SiteTitleLink to=\"/\">{data.site.siteMetadata.title}</SiteTitleLink>\r\n      </SiteTitle>\r\n      <nav>\r\n        <NavLinks>\r\n          {data.site.siteMetadata.navigation.map((item, i) => (\r\n            <NavItem key={i}>\r\n              <NavLink to={item.url} path={globalHistory.location.pathname}>\r\n                {item.name}\r\n              </NavLink>\r\n            </NavItem>\r\n          ))}\r\n        </NavLinks>\r\n      </nav>\r\n    </HeaderTag>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export default {\r\n  fonts: {\r\n    main: 'Noto Serif KR, serif',\r\n    code: 'Source Code Pro, monospace',\r\n  },\r\n  colors: {\r\n    light: { text: 'black', background: 'white' },\r\n    dark: { text: 'white', background: 'black' },\r\n  },\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Style = styled.div<{\r\n  fonts: { main: string; code: string };\r\n  colors: {\r\n    light: { text: string; background: string };\r\n    dark: { text: string; background: string };\r\n  };\r\n}>`\r\n  font-family: ${(props) => props.fonts.main};\r\n  color: ${(props) => props.colors.light.text};\r\n  background: ${(props) => props.colors.light.background};\r\n\r\n  &.dark {\r\n    color: ${(props) => props.colors.dark.text};\r\n    background: ${(props) => props.colors.dark.background};\r\n  }\r\n\r\n  & code {\r\n    font-family: ${(props) => props.fonts.code};\r\n  }\r\n`;\r\n\r\nconst Theme = ({\r\n  theme,\r\n  children,\r\n}: {\r\n  theme: any;\r\n  children: React.ReactNode;\r\n}) => {\r\n  return <Style {...theme}>{children}</Style>;\r\n};\r\n\r\nexport default Theme;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Header from './header';\r\nimport light from '../themes/light';\r\nimport Theme from './theme';\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\n\r\ninterface DataProps {\r\n  pageTitle: string;\r\n  maxWidth?: number;\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst Container = styled.div`\r\n  margin: auto;\r\n  max-width: 700px;\r\n`;\r\n\r\nconst Heading = styled.h1`\r\n  color: rebeccapurple;\r\n`;\r\n\r\nconst Main = styled.main<{ maxWidth?: number }>`\r\n  max-width: ${(props) => props.maxWidth ?? '700'}px;\r\n  margin: auto;\r\n`;\r\n\r\nconst Layout = ({ pageTitle, maxWidth, children }: DataProps) => {\r\n  return (\r\n    <Theme theme={light}>\r\n      <Container>\r\n        <Header />\r\n        <Main maxWidth={maxWidth}>\r\n          <Heading>{pageTitle}</Heading>\r\n          {children}\r\n        </Main>\r\n      </Container>\r\n    </Theme>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import * as React from 'react';\r\nimport { graphql, useStaticQuery } from 'gatsby';\r\n\r\nconst Seo = ({ title }: { title: string }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  return (\r\n    <title>\r\n      {title} | {data.site.siteMetadata.title}\r\n    </title>\r\n  );\r\n};\r\n\r\nexport default Seo;\r\n","import { HeadFC } from 'gatsby';\r\nimport React from 'react';\r\nimport Layout from '../components/layout';\r\nimport Seo from '../components/seo';\r\n\r\nconst AboutPage = () => {\r\n  return (\r\n    <Layout pageTitle=\"About Me\">\r\n      <p>\r\n        Hi there! I'm the proud creator of this site, which I built with Gatsby.\r\n      </p>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport const Head: HeadFC = () => <Seo title=\"About Me\" />;\r\n\r\nexport default AboutPage;\r\n"],"names":["SiteTitle","styled","SiteTitleLink","Link","withConfig","NavLinks","NavItem","NavLink","props","path","to","HeaderTag","data","useStaticQuery","React","site","siteMetadata","title","navigation","map","item","i","key","url","globalHistory","name","fonts","main","code","colors","light","text","background","dark","Style","theme","children","Container","Heading","Main","maxWidth","pageTitle","Theme","Header","Head","Seo","Layout"],"sourceRoot":""}