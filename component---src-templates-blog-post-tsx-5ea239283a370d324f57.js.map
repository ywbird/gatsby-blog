{"version":3,"file":"component---src-templates-blog-post-tsx-5ea239283a370d324f57.js","mappings":"0PAGMA,EAAcC,EAAAA,QAAAA,IAAAA,WAAH,6DAAGA,CAAH,+JAcXC,EAAUD,EAAAA,QAAAA,IAAAA,WAAH,yDAAGA,CAAH,qIAiDb,EArCwB,WACtB,OAAoCE,EAAAA,EAAAA,WAAkB,GAA/CC,EAAP,KAAmBC,EAAnB,KAEMC,EAA6B,iBAAXC,QAExBC,EAAAA,EAAAA,YAAU,WACJF,GACFC,OAAOE,iBAAiB,UAAU,WAC5BF,OAAOG,YAAc,IACvBL,GAAc,GAEdA,GAAc,EAJlB,GAFK,GAUN,IAWH,OACEM,EAAAA,EAAAA,KAACT,EAAD,UACGE,IACCO,EAAAA,EAAAA,KAACX,EAAD,CAAaY,QAZC,WACdN,GACFC,OAAOM,SAAS,CACdC,IAAK,EACLC,SAAU,UAJhB,EAYyCC,UAAU,cAA7C,kBA7BR,ECLMC,EAAQ,CACZC,QAASjB,EAAAA,QAAAA,IAAAA,WAAF,CAAAkB,YAAAA,oBAAAC,YAAAA,cAAEnB,CAAF,y1CA4GPoB,KAAMpB,EAAAA,QAAAA,IAAAA,WAAF,CAAAkB,YAAAA,iBAAAC,YAAAA,cAAEnB,CAAF,uIAWAqB,EAAWrB,EAAAA,QAAAA,EAAAA,WAAH,CAAAkB,YAAAA,qBAAAC,YAAAA,cAAGnB,CAAH,yDAMRsB,GAAUtB,EAAAA,EAAAA,SAAOuB,EAAAA,IAAVC,WAAA,CAAAN,YAAAA,oBAAAC,YAAAA,cAAGnB,CAAH,8KA2DAyB,EAA0B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACrChB,EAAAA,EAAAA,KAACiB,EAAAA,EAAD,CAAKC,MAAOF,EAAKG,eAAeC,YAAYF,OADvC,EAIP,EArDiB,SAAC,GAG4B,IAF5CF,EAE4C,EAF5CA,KACAK,EAC4C,EAD5CA,YAEMC,GAAsCC,EAAAA,EAAAA,GAC1CP,EAAKG,eAAeC,YAAYI,OAElC,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAD,CAAQC,SAAU,IAAKC,UAAWZ,EAAKG,eAAeC,YAAYF,MAAlEW,SAAAA,EACEJ,EAAAA,EAAAA,MAACnB,EAAMI,KAAP,CAAAmB,SAAAA,EACE7B,EAAAA,EAAAA,KAAAA,IAAAA,CAAA6B,SAAIb,EAAKG,eAAeC,YAAYU,QACpC9B,EAAAA,EAAAA,KAACW,EAAD,CAAAkB,SACGb,EAAKG,eAAeC,YAAYW,IAAIC,KAAI,SAACD,EAAKE,GAAN,OACvCjC,EAAAA,EAAAA,KAAAA,EAAAA,SAAAA,CAAA6B,UACE7B,EAAAA,EAAAA,KAACY,EAAD,CAASsB,GAAE,QAAUH,EAArBF,SAA6BE,KAFhC,SAQJT,IAAStB,EAAAA,EAAAA,KAACmC,EAAAA,EAAD,CAAab,MAAOA,EAAOc,IAAI,iBACzCpC,EAAAA,EAAAA,KAAAA,KAAAA,CAAAA,IACAA,EAAAA,EAAAA,KAACM,EAAMC,QAAP,CAAAsB,UACE7B,EAAAA,EAAAA,KAACqC,EAAAA,GAAD,CAAAR,UACE7B,EAAAA,EAAAA,KAAAA,MAAAA,CAAKsC,wBAAyB,CAAEC,OAAQlB,EAAYmB,aAGxDxC,EAAAA,EAAAA,KAACyC,EAAD,MA3BN,C","sources":["webpack://Lotus/./src/components/toTop.tsx","webpack://Lotus/./src/templates/blogPost.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ToTopButton = styled.div`\r\n  /* width: 40px;\r\n  height: 40px; */\r\n  font-family: var(--main-font);\r\n  color: var(--theme-ui-colors-text);\r\n  cursor: pointer;\r\n  letter-spacing: 0;\r\n  transition: 0.1s cubic-bezier(0.075, 0.82, 0.165, 1);\r\n  &:hover {\r\n    /* letter-spacing: 2px; */\r\n    /* transform: translateX(px); */\r\n  }\r\n`;\r\n\r\nconst ToTopEl = styled.div`\r\n  @media (min-width: 935px) {\r\n    position: fixed;\r\n    display: block;\r\n    left: 50%;\r\n    bottom: 80px;\r\n    transform: translateX(410px);\r\n  }\r\n  display: none;\r\n  z-index: 2;\r\n`;\r\n\r\nconst ToTop: React.FC = () => {\r\n  const [showButton, setShowButton] = useState<boolean>(false);\r\n\r\n  const isWindow = typeof window === 'object';\r\n\r\n  useEffect(() => {\r\n    if (isWindow) {\r\n      window.addEventListener('scroll', () => {\r\n        if (window.pageYOffset > 300) {\r\n          setShowButton(true);\r\n        } else {\r\n          setShowButton(false);\r\n        }\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const scrollToTop = () => {\r\n    if (isWindow) {\r\n      window.scrollTo({\r\n        top: 0,\r\n        behavior: 'smooth', // for smoothly scrolling\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ToTopEl>\r\n      {showButton && (\r\n        <ToTopButton onClick={scrollToTop} className=\"back-to-top\">\r\n          TOP\r\n        </ToTopButton>\r\n      )}\r\n    </ToTopEl>\r\n  );\r\n};\r\n\r\nexport default ToTop;\r\n","import { graphql, HeadFC, PageProps, Link } from 'gatsby';\r\nimport React from 'react';\r\nimport { MDXProvider } from '@mdx-js/react';\r\nimport Layout from '../components/layout';\r\nimport Seo from '../components/seo';\r\nimport { IGatsbyImageData, GatsbyImage, getImage } from 'gatsby-plugin-image';\r\nimport styled from 'styled-components';\r\nimport ToTop from '../components/toTop';\r\n\r\ninterface DataProps {\r\n  markdownRemark: {\r\n    frontmatter: {\r\n      title: string;\r\n      date: `${string} ${number}, ${number}`;\r\n      tag: string[];\r\n      cover: {\r\n        childImageSharp: {\r\n          gatsbyImageData: IGatsbyImageData;\r\n        };\r\n      };\r\n    };\r\n  };\r\n}\r\n\r\nconst Style = {\r\n  Content: styled.div`\r\n    font-size: 17px;\r\n    pre[class*='language-'] {\r\n      padding: 1em;\r\n      margin: 0em 0 0.5em 0;\r\n      /* overflow: ; */\r\n      overflow-wrap: break-word;\r\n      border-radius: 0.3em;\r\n      /* border-top-left-radius: 0; */\r\n    }\r\n\r\n    pre code {\r\n      font-family: var(--code-font) !important;\r\n      font-size: 0.9em !important;\r\n    }\r\n\r\n    blockquote {\r\n      margin-left: 0;\r\n      padding-left: 40px;\r\n      border-left: 3px solid var(--theme-ui-colors-border);\r\n      opacity: 80%;\r\n      /* background-color: var(--background-color); */\r\n      color: var(--theme-ui-colors-text);\r\n      /* filter: invert(); */\r\n    }\r\n\r\n    .gatsby-highlight-code-line {\r\n      background-color: #535547;\r\n      display: block;\r\n      margin-right: calc(-1em - 2px);\r\n      margin-left: calc(-1em - 2px);\r\n      padding-right: 1em;\r\n      padding-left: calc(0.75em + 2px);\r\n      border-left: 0.3em solid #a6e22e;\r\n    }\r\n\r\n    .gatsby-remark-code-title {\r\n      display: inline-block;\r\n      margin-top: 0.5em;\r\n      margin-bottom: -0.6rem;\r\n      padding: 0.3em 1em;\r\n      font-family: var(--code-font);\r\n      font-size: 1em;\r\n\r\n      background-color: #282a36;\r\n      color: white;\r\n      z-index: 0;\r\n\r\n      border-top-left-radius: 0.3em;\r\n      border-top-right-radius: 0.3em;\r\n    }\r\n\r\n    /* :not(pre) > code.language-text {\r\n    background-color: gray;\r\n  } */\r\n    div:not(pre) > code {\r\n      background-color: gray !important;\r\n      padding: 2px 5px;\r\n      border-radius: 4px;\r\n      /* color: var(--text-color); */\r\n    }\r\n\r\n    h1,\r\n    h2,\r\n    h3,\r\n    h4,\r\n    h5,\r\n    h6 {\r\n      color: var(--theme-ui-colors-heading);\r\n    }\r\n    color: var(--theme-ui-colors-content);\r\n\r\n    a {\r\n      color: var(--theme-ui-colors-primary);\r\n      text-decoration: none;\r\n      transition: 0.08s cubic-bezier(0.9, 0.03, 0.31, 1.36);\r\n      &:visited {\r\n        color: var(--theme-ui-colors-primary);\r\n      }\r\n      &:hover {\r\n        /* animation: link-line 0.1s ease-in; */\r\n        border-bottom: 2px solid var(--theme-ui-colors-primary);\r\n      }\r\n      &.anchor {\r\n        /* transform: translateX(0); */\r\n        opacity: 0;\r\n        transition: 0.08s ease-in;\r\n        fill: var(--theme-ui-colors-heading);\r\n        &:hover {\r\n          border-bottom: 0px;\r\n        }\r\n      }\r\n    }\r\n\r\n    h1,\r\n    h2,\r\n    h3,\r\n    h4,\r\n    h5,\r\n    h6 {\r\n      &:hover {\r\n        a.anchor {\r\n          opacity: 100%;\r\n          /* transform: translateX(-100%); */\r\n        }\r\n      }\r\n    }\r\n  `,\r\n  Meta: styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    font-family: var(--main-font);\r\n    p {\r\n      color: var(--theme-ui-colors-text);\r\n    }\r\n  `,\r\n};\r\n\r\nconst TagLinks = styled.p`\r\n  display: flex;\r\n  flex-direction: row;\r\n  height: min-content;\r\n`;\r\n\r\nconst TagLink = styled(Link)`\r\n  padding: 1px 3px;\r\n  margin: 0 2px;\r\n  border-radius: 4px;\r\n  border: 1px solid var(--theme-ui-colors-border);\r\n  height: min-content;\r\n  color: var(--theme-ui-colors-text);\r\n  text-decoration: none;\r\n`;\r\n\r\nconst BlogPost = ({\r\n  data,\r\n  pageContext,\r\n}: PageProps<DataProps, { html: string }>) => {\r\n  const image: IGatsbyImageData | undefined = getImage(\r\n    data.markdownRemark.frontmatter.cover\r\n  );\r\n  return (\r\n    <Layout maxWidth={750} pageTitle={data.markdownRemark.frontmatter.title}>\r\n      <Style.Meta>\r\n        <p>{data.markdownRemark.frontmatter.date}</p>\r\n        <TagLinks>\r\n          {data.markdownRemark.frontmatter.tag.map((tag, i) => (\r\n            <>\r\n              <TagLink to={`/tag/${tag}`}>{tag}</TagLink>\r\n              {/* {data.markdownRemark.frontmatter.tag.length !== i + 1 ? `, ` : ''} */}\r\n            </>\r\n          ))}\r\n        </TagLinks>\r\n      </Style.Meta>\r\n      {image && <GatsbyImage image={image} alt=\"cover image\" />}\r\n      <hr />\r\n      <Style.Content>\r\n        <MDXProvider>\r\n          <div dangerouslySetInnerHTML={{ __html: pageContext.html }}></div>\r\n        </MDXProvider>\r\n      </Style.Content>\r\n      <ToTop />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport const pageQuery = graphql`\r\n  query Post($id: String) {\r\n    markdownRemark(id: { eq: $id }) {\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM D, YYYY\")\r\n        tag\r\n        cover {\r\n          childImageSharp {\r\n            gatsbyImageData(width: 750, height: 400)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Head: HeadFC<DataProps> = ({ data }) => (\r\n  <Seo title={data.markdownRemark.frontmatter.title} />\r\n);\r\n\r\nexport default BlogPost;\r\n"],"names":["ToTopButton","styled","ToTopEl","useState","showButton","setShowButton","isWindow","window","useEffect","addEventListener","pageYOffset","_jsx","onClick","scrollTo","top","behavior","className","Style","Content","displayName","componentId","Meta","TagLinks","TagLink","Link","withConfig","Head","data","Seo","title","markdownRemark","frontmatter","pageContext","image","getImage","cover","_jsxs","Layout","maxWidth","pageTitle","children","date","tag","map","i","to","GatsbyImage","alt","MDXProvider","dangerouslySetInnerHTML","__html","html","ToTop"],"sourceRoot":""}