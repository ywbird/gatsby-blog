{"version":3,"file":"component---src-templates-blog-post-tsx-dc0321d7cc70e145ace6.js","mappings":"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","sources":["webpack://lotus/./src/components/article/index.tsx","webpack://lotus/./node_modules/@giscus/react/dist/index.mjs","webpack://lotus/./src/components/seo.tsx","webpack://lotus/./src/templates/blog-post.tsx"],"sourcesContent":["import { IPost } from '@/global';\r\nimport { Link } from 'gatsby';\r\nimport { FC } from 'react';\r\n\r\nimport './article.scss';\r\n\r\nconst Article: FC<{ post: IPost }> = ({ post }) => {\r\n  const {\r\n    frontmatter: { title },\r\n    excerpt,\r\n    fields: { slug },\r\n  } = post;\r\n  return (\r\n    <article className=\"post-card\">\r\n      <Link to={slug}>\r\n        <h2 className=\"post-card-title\">{title}</h2>\r\n        <p className=\"post-card-excerpt\">{excerpt}</p>\r\n      </Link>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Article;\r\n","import { jsx as b } from \"react/jsx-runtime\";\nimport { useState as j, useEffect as w } from \"react\";\nfunction G({\n  id: e,\n  host: i,\n  repo: r,\n  repoId: o,\n  category: u,\n  categoryId: n,\n  mapping: s,\n  term: a,\n  strict: f,\n  reactionsEnabled: d,\n  emitMetadata: m,\n  inputPosition: c,\n  theme: p,\n  lang: l,\n  loading: g\n}) {\n  const [t, x] = j(!1);\n  return w(() => {\n    t || (import(\"./giscus.cb57b339.mjs\"), x(!0));\n  }, []), t ? b(\"giscus-widget\", {\n    id: e,\n    host: i,\n    repo: r,\n    repoid: o,\n    category: u,\n    categoryid: n,\n    mapping: s,\n    term: a,\n    strict: f,\n    reactionsenabled: d,\n    emitmetadata: m,\n    inputposition: c,\n    theme: p,\n    lang: l,\n    loading: g\n  }) : null;\n}\nexport {\n  G as default\n};\n","import { FC } from 'react';\r\nimport { graphql, useStaticQuery } from 'gatsby';\r\n\r\nconst Seo: FC<{\r\n  title: string;\r\n  date?: string;\r\n  description?: string;\r\n  slug?: string;\r\n}> = ({ title, date, description, slug }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          siteUrl\r\n          title\r\n          description\r\n          nickname\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  return (\r\n    <>\r\n      <title>\r\n        {title} | {data.site.siteMetadata.title}\r\n      </title>\r\n      <meta charSet=\"UTF-8\" />\r\n      <meta name=\"description\" content={data.site.siteMetadata.description} />\r\n      <meta httpEquiv=\"Author\" content={data.site.siteMetadata.nickname} />\r\n      <meta property=\"og:image\" content={data.site.siteMetadata.logo} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:site_name\" content={data.site.siteMetadata.title} />\r\n      {date && <meta name=\"Date\" content={date} />}\r\n      {description && <meta property=\"og:description\" content={description} />}\r\n      {slug && (\r\n        <meta\r\n          property=\"og:url\"\r\n          content={data.site.siteMetadata.siteUrl + slug}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Seo;\r\n","import { graphql, PageProps, Link, HeadFC } from 'gatsby';\r\nimport Giscus, { GiscusProps } from '@giscus/react';\r\n\r\nimport Layout from '@/components/layout';\r\nimport { IPost } from '@/global';\r\nimport Article from '@/components/article';\r\n\r\nimport './blog-post.scss';\r\nimport Seo from '@/components/seo';\r\n\r\ninterface DataProps {\r\n  markdownRemark: IPost;\r\n  previous: IPost;\r\n  next: IPost;\r\n  site: {\r\n    siteMetadata: {\r\n      giscus: GiscusProps;\r\n    };\r\n  };\r\n}\r\n\r\nconst BlogPostTemplate = ({ data }: PageProps<DataProps>) => {\r\n  const {\r\n    markdownRemark: {\r\n      html,\r\n      frontmatter: { title, date, tags },\r\n    },\r\n    site: {\r\n      siteMetadata: { giscus },\r\n    },\r\n  } = data;\r\n  console.log(data);\r\n  return (\r\n    <Layout pageTitle={title}>\r\n      <div className=\"meta\">\r\n        <div className=\"meta-date\">{date}</div>\r\n        <div>\r\n          <ul className=\"meta-tags\">\r\n            {tags &&\r\n              tags.map((tag) => (\r\n                <li className=\"tag-item\" key={tag}>\r\n                  <Link className=\"tag-link\" to={`/tag/${tag}`}>\r\n                    {tag}\r\n                  </Link>\r\n                </li>\r\n              ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <div className=\"content\" dangerouslySetInnerHTML={{ __html: html }} />\r\n      <hr />\r\n      <div className=\"nextPrev\">\r\n        {data?.previous && <Article post={data.previous} />}\r\n        {data?.next && <Article post={data.next} />}\r\n      </div>\r\n      <hr />\r\n      <Giscus\r\n        id=\"comment\"\r\n        repo={giscus.repo}\r\n        repoId={giscus.repoId}\r\n        category={giscus.category}\r\n        categoryId={giscus.categoryId}\r\n        mapping={giscus.mapping}\r\n        strict={giscus.strict}\r\n        reactionsEnabled={giscus.reactionsEnabled}\r\n        emitMetadata={giscus.emitMetadata}\r\n        inputPosition={giscus.inputPosition}\r\n        theme={giscus.theme}\r\n        lang={giscus.lang}\r\n        loading=\"lazy\"\r\n      />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default BlogPostTemplate;\r\n\r\nexport const Head: HeadFC<DataProps> = ({ data }) => (\r\n  <Seo\r\n    title={data.markdownRemark.frontmatter.title}\r\n    date={data.markdownRemark.frontmatter.metaDate}\r\n    description={data.markdownRemark.excerpt}\r\n    slug={data.markdownRemark.fields.slug}\r\n  />\r\n);\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug(\r\n    $id: String!\r\n    $previousPostId: String\r\n    $nextPostId: String\r\n  ) {\r\n    markdownRemark(id: { eq: $id }) {\r\n      fields {\r\n        slug\r\n      }\r\n      id\r\n      excerpt(pruneLength: 160)\r\n      html\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        metaDate: date\r\n        description\r\n        tags\r\n      }\r\n    }\r\n    previous: markdownRemark(id: { eq: $previousPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n      excerpt(pruneLength: 120)\r\n    }\r\n    next: markdownRemark(id: { eq: $nextPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n      excerpt(pruneLength: 120)\r\n    }\r\n    site {\r\n      siteMetadata {\r\n        giscus {\r\n          category\r\n          categoryId\r\n          emitMetadata\r\n          inputPosition\r\n          lang\r\n          mapping\r\n          reactionsEnabled\r\n          repo\r\n          repoId\r\n          strict\r\n          theme\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["_ref","post","frontmatter","title","excerpt","fields","slug","_jsx","className","_jsxs","Link","to","G","id","e","host","i","repo","r","repoId","o","category","u","categoryId","n","mapping","s","term","a","strict","f","reactionsEnabled","d","emitMetadata","m","inputPosition","c","theme","p","lang","l","loading","g","t","x","repoid","categoryid","reactionsenabled","emitmetadata","inputposition","date","description","data","useStaticQuery","site","siteMetadata","charSet","name","content","httpEquiv","nickname","property","logo","siteUrl","markdownRemark","html","tags","giscus","console","log","Layout","pageTitle","children","map","tag","dangerouslySetInnerHTML","__html","previous","Article","next","Giscus","Head","_ref2","Seo","metaDate"],"sourceRoot":""}