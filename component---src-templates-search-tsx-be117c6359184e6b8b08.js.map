{"version":3,"file":"component---src-templates-search-tsx-be117c6359184e6b8b08.js","mappings":"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","sources":["webpack://Lotus/./src/components/postCard.tsx","webpack://Lotus/./src/components/pagination.tsx","webpack://Lotus/./src/components/postList.tsx","webpack://Lotus/./src/templates/search.tsx"],"sourcesContent":["import { Link } from 'gatsby';\r\nimport { GatsbyImage, getImage, IGatsbyImageData } from 'gatsby-plugin-image';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface PostCardProps {\r\n  slug: string;\r\n  title: string;\r\n  date: string;\r\n  excerpt: string;\r\n  cover: IGatsbyImageData;\r\n}\r\n\r\nconst PostLinkItem = styled(Link)`\r\n  color: var(--theme-ui-colors-text);\r\n  text-decoration: none;\r\n  /* padding: 0.3em; */\r\n  &:visited {\r\n    color: var(--theme-ui-colors-text);\r\n  }\r\n`;\r\n\r\nconst Card = styled.article`\r\n  /* width: 450px; */\r\n  height: 200px;\r\n  /* margin: 1em; */\r\n  /* border: 2px solid var(--border-color); */\r\n\r\n  /* background-color: var(--button-color); */\r\n  border: 1px solid var(--theme-ui-colors-border);\r\n  border-radius: 4px;\r\n  transition: color 0.15s ease-out, background 0.15s ease-out,\r\n    transform 0.15s ease-out, box-shadow 0.15s ease-out, border 0.15s ease-out;\r\n  display: flex;\r\n  flex-direction: row;\r\n  /* box-shadow: 5px 5px var(--border-color); */\r\n  &:hover {\r\n    /* box-shadow: 3px 3px var(--border-color); */\r\n    /* transform: translate(0px, 2px); */\r\n    /* background-color: aqua; */\r\n  }\r\n`;\r\n\r\nconst Frontmatter = styled.div<{ image?: boolean }>`\r\n  padding: 0.2em 0.5em;\r\n  /* border-left: 1px solid black; */\r\n  /* width: ${(props) => (props.image ? '230' : '450')}px; */\r\n  font-family: var(--main-font);\r\n  width: 490px;\r\n\r\n  h2 {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-size: 1.3em;\r\n  }\r\n`;\r\n\r\nconst Excerpt = styled.p`\r\n  overflow: hidden;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 6;\r\n  -moz-box-orient: vertical;\r\n  -webkit-box-orient: vertical;\r\n  margin: 0px 0 0 0;\r\n`;\r\n\r\nconst MetaInner = styled.p`\r\n  margin: 8px 0;\r\n`;\r\n\r\nconst Image = styled(GatsbyImage)`\r\n  width: 200px;\r\n  border-top-left-radius: 2px;\r\n  border-bottom-left-radius: 2px;\r\n  /* border-right: 1px solid var(--border-color); */\r\n`;\r\n\r\nconst Meta = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  font-family: var(--main-font);\r\n`;\r\n\r\nconst Data = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  height: 160px;\r\n`;\r\n\r\nconst PostCard: React.FC<PostCardProps> = ({\r\n  slug,\r\n  title,\r\n  date,\r\n  excerpt,\r\n  cover,\r\n}) => {\r\n  const image: IGatsbyImageData | undefined = getImage(cover);\r\n  return (\r\n    <Card>\r\n      <Link to={`/post/${slug}`}>\r\n        {image && <Image image={image} alt=\"cover image\" />}\r\n      </Link>\r\n      <Frontmatter image={!!image}>\r\n        <PostLinkItem to={`/post/${slug}`}>\r\n          <h2>{title}</h2>\r\n          <Data>\r\n            <Excerpt>{excerpt}</Excerpt>\r\n            <Meta>\r\n              <MetaInner>{date}</MetaInner>\r\n            </Meta>\r\n          </Data>\r\n        </PostLinkItem>\r\n      </Frontmatter>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PostCard;\r\n","import { Link } from 'gatsby';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface DataProps {\r\n  // currentPage: number;\r\n  numPages: number;\r\n  tag?: string;\r\n  // baseUrl?: string;\r\n}\r\n\r\nconst PagenationWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 2em 0;\r\n`;\r\n\r\nconst PagenationLink = styled(Link)`\r\n  width: 30px;\r\n  height: 30px;\r\n  border: 0px;\r\n  /* background-color: var(--background-color); */\r\n  border-radius: 2px;\r\n  border: 1px solid var(--theme-ui-colors-border);\r\n  color: var(--theme-ui-colors-text);\r\n  text-decoration: none;\r\n  display: grid;\r\n  place-items: center;\r\n  margin: 0.15em;\r\n\r\n  &:first-child {\r\n    border-top-left-radius: 4px;\r\n    border-bottom-left-radius: 4px;\r\n  }\r\n  &:last-child {\r\n    border-top-right-radius: 4px;\r\n    border-bottom-right-radius: 4px;\r\n  }\r\n`;\r\n\r\nconst Pagenation: React.FC<DataProps> = ({\r\n  // currentPage,\r\n  numPages,\r\n  tag,\r\n  // baseUrl,\r\n}) => {\r\n  // const params = new URLSearchParams(document.location.search);\r\n  // const tag = params.get('tag') ?? '';\r\n  return (\r\n    <PagenationWrapper>\r\n      {Array.from({ length: numPages }).map((_, i) => (\r\n        <PagenationLink\r\n          key={i}\r\n          to={\r\n            i + 1 === 1\r\n              ? `/${tag ? `tag/${tag}` : ''}`\r\n              : `/${tag ? `tag/${tag}/` : ''}${i + 1}`\r\n          }\r\n        >\r\n          {i + 1}\r\n        </PagenationLink>\r\n      ))}\r\n    </PagenationWrapper>\r\n  );\r\n};\r\n\r\nexport default Pagenation;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PostCard from './postCard';\r\nimport { IGatsbyImageData } from 'gatsby-plugin-image';\r\nimport Layout from './layout';\r\nimport { graphql } from 'gatsby';\r\nimport Pagenation from './pagination';\r\n\r\ninterface IData {\r\n  posts?: IPost[];\r\n  // pageContext: {\r\n  //   limit: number;\r\n  //   skip: number;\r\n  //   numPages: number;\r\n  //   currentPage: number;\r\n  // };\r\n  // currentPage: number;\r\n  usePagination?: boolean;\r\n  numPages?: number;\r\n  tag?: string;\r\n  // baseUrl?: string;\r\n}\r\n\r\nconst Posts = styled.div`\r\n  grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\r\n  display: grid;\r\n  gap: 20px;\r\n  /* flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: center; */\r\n`;\r\n\r\nconst PostList: React.FC<IData> = ({\r\n  posts,\r\n  // currentPage,\r\n  numPages,\r\n  usePagination,\r\n  tag,\r\n  // baseUrl,\r\n}) => {\r\n  return (\r\n    // <Layout pageTitle=\"\">\r\n    <>\r\n      <Posts>\r\n        {posts &&\r\n          posts.map((node, i) => (\r\n            <PostCard\r\n              key={node.id}\r\n              // key={i}\r\n              slug={node.frontmatter.slug}\r\n              title={node.frontmatter.title}\r\n              date={node.frontmatter.date}\r\n              excerpt={node.frontmatter.description}\r\n              cover={\r\n                node.frontmatter.cover?.childImageSharp.gatsbyImageData ??\r\n                undefined\r\n              }\r\n            />\r\n          ))}\r\n      </Posts>\r\n      {usePagination === undefined && numPages ? (\r\n        <Pagenation tag={tag} numPages={numPages} />\r\n      ) : usePagination && numPages ? (\r\n        <Pagenation tag={tag} numPages={numPages} />\r\n      ) : (\r\n        ''\r\n      )}\r\n    </>\r\n    // </Layout>\r\n  );\r\n};\r\n\r\nexport default PostList;\r\n","import { graphql, HeadFC, PageProps } from 'gatsby';\r\nimport React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Layout from '../components/layout';\r\nimport PostList from '../components/postList';\r\nimport Seo from '../components/seo';\r\n\r\ninterface DataProps {\r\n  allMarkdownRemark: {\r\n    nodes: IPost[];\r\n  };\r\n}\r\n\r\nconst SearchInput = styled.input`\r\n  background-color: transparent;\r\n  border: 0;\r\n  /* border-bottom: 1px solid var(--theme-ui-colors-text); */\r\n  color: var(--theme-ui-colors-text);\r\n  font-family: var(--main-font);\r\n  font-size: 1em;\r\n  width: 380px;\r\n  &:focus {\r\n    outline: 0;\r\n  }\r\n  &::placeholder {\r\n    color: var(--theme-ui-colors-mute);\r\n    opacity: 80%;\r\n    font-style: italic;\r\n  }\r\n`;\r\n\r\nconst SearchDiv = styled.div`\r\n  width: 380px;\r\n  position: relative;\r\n  display: flex;\r\n  &::after {\r\n    content: ' ';\r\n    background-color: var(--theme-ui-colors-text);\r\n    transform: translateX(0px);\r\n    width: 381px;\r\n    height: 1px;\r\n    bottom: -4px;\r\n    position: absolute;\r\n  }\r\n`;\r\n\r\nconst SearchWapper = styled.div`\r\n  display: grid;\r\n  place-items: center;\r\n  padding: 3em 0;\r\n`;\r\n\r\nconst Search = ({ data }: PageProps<DataProps>) => {\r\n  const [result, setResult] = useState<IPost[]>();\r\n  useEffect(() => {\r\n    setResult((prev) => (prev = data.allMarkdownRemark.nodes));\r\n  }, []);\r\n\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const SearchFilter = (node: {\r\n      frontmatter: { title: string; description: string };\r\n    }) => {\r\n      const title = node.frontmatter.title;\r\n      const desc = node.frontmatter.description;\r\n      return (\r\n        (title.toLowerCase().search(e.target.value) !== -1 &&\r\n          title.toLowerCase().search(e.target.value) !== undefined) ||\r\n        (desc.toLowerCase().search(e.target.value) !== -1 &&\r\n          desc.toLowerCase().search(e.target.value) !== undefined)\r\n      );\r\n    };\r\n    const temp: IPost[] = data.allMarkdownRemark.nodes.filter(SearchFilter);\r\n    // console.log(temp);\r\n    setResult((prev) => (prev = temp));\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <SearchWapper>\r\n        <SearchDiv>\r\n          <SearchInput\r\n            type=\"text\"\r\n            onChange={onChange}\r\n            placeholder=\"Search...\"\r\n          />\r\n        </SearchDiv>\r\n      </SearchWapper>\r\n      <PostList posts={result} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n\r\nexport const Head: HeadFC = () => <Seo title=\"Search\" />;\r\n\r\nexport const pageQuery = graphql`\r\n  query SearchPage {\r\n    allMarkdownRemark(sort: { order: DESC, fields: frontmatter___date }) {\r\n      nodes {\r\n        frontmatter {\r\n          title\r\n          date(formatString: \"MMM D, YYYY\")\r\n          slug\r\n          description\r\n          tag\r\n          cover {\r\n            childImageSharp {\r\n              gatsbyImageData(width: 200, height: 200)\r\n            }\r\n          }\r\n        }\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["PostLinkItem","styled","Link","withConfig","Card","Frontmatter","Excerpt","MetaInner","Image","GatsbyImage","Meta","Data","slug","title","date","excerpt","cover","image","getImage","_jsxs","_jsx","to","alt","PagenationWrapper","PagenationLink","numPages","tag","Array","from","length","map","_","i","Posts","posts","usePagination","node","PostCard","frontmatter","description","_node$frontmatter$cov2","childImageSharp","gatsbyImageData","undefined","id","Pagenation","SearchInput","displayName","componentId","SearchDiv","SearchWapper","data","useState","result","setResult","useEffect","prev","allMarkdownRemark","nodes","Layout","children","type","onChange","e","temp","filter","desc","toLowerCase","search","target","value","placeholder","PostList","Head","Seo"],"sourceRoot":""}